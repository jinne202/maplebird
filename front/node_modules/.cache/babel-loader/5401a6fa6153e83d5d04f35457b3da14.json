{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Helmet from 'react-helmet';\nimport { LOAD_POST_REQUEST, LOAD_COMMENT_REQUEST } from '../reducers/post';\nimport PostCard from '../containers/PostCard';\nimport { PostCardWrapper } from './Style/PagesStyle';\n\nvar Post = function Post(_ref) {\n  var id = _ref.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost;\n\n  console.log('singlePost', singlePost);\n\n  if (!singlePost) {\n    return null;\n  }\n\n  return (/*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Helmet, {\n      title: \"\".concat(singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"),\n      description: singlePost.content,\n      meta: [{\n        name: 'description',\n        content: singlePost.content\n      }, {\n        property: 'og:title',\n        content: \"\".concat(singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }, {\n        property: 'og:description',\n        content: singlePost.content\n      }, {\n        property: 'og:image',\n        content: singlePost.Images[0] && /*#__PURE__*/React.createElement(\"img\", {\n          src: \"http://localhost:7070/\".concat(singlePost.Images[0].src)\n        })\n      }, {\n        property: 'og:url',\n        content: \"http://localhost:3060/post/\".concat(id)\n      }]\n    }), /*#__PURE__*/React.createElement(PostCardWrapper, null, /*#__PURE__*/React.createElement(PostCard, {\n      key: singlePost.id,\n      post: singlePost,\n      commentOpened: true\n    })))\n  );\n};\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var id;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = _parseInt(context.query.id, 10);\n            context.store.dispatch({\n              type: LOAD_POST_REQUEST,\n              data: id\n            });\n            context.store.dispatch({\n              type: LOAD_COMMENT_REQUEST,\n              data: id\n            });\n            console.log('POST getInitialProps', id);\n            return _context.abrupt(\"return\", {\n              id: id\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Post;","map":{"version":3,"sources":["C:/project/nodebird/front/pages/post.js"],"names":["React","useEffect","useSelector","useDispatch","Helmet","LOAD_POST_REQUEST","LOAD_COMMENT_REQUEST","PostCard","PostCardWrapper","Post","id","state","post","singlePost","console","log","User","nickname","content","name","property","Images","src","getInitialProps","context","query","store","dispatch","type","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,MAAP,MAAmB,cAAnB;AACA,SAASC,iBAAT,EAA4BC,oBAA5B,QAAwD,kBAAxD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,eAAT,QAAgC,oBAAhC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAY;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,qBACER,WAAW,CAAC,UAAAS,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CADb;AAAA,MACbC,UADa,gBACbA,UADa;;AAGrBC,EAAAA,OAAO,CAACC,GAAR,CAAY,YAAZ,EAA0BF,UAA1B;;AACA,MAAI,CAACA,UAAL,EAAiB;AACf,WAAO,IAAP;AACD;;AACD,uBACI,8CACE,oBAAC,MAAD;AACE,MAAA,KAAK,YAAOA,UAAU,CAACG,IAAX,CAAgBC,QAAvB,wBADP;AAEE,MAAA,WAAW,EAAIJ,UAAU,CAACK,OAF5B;AAGE,MAAA,IAAI,EAAI,CAAC;AACPC,QAAAA,IAAI,EAAG,aADA;AACeD,QAAAA,OAAO,EAAGL,UAAU,CAACK;AADpC,OAAD,EAEL;AACDE,QAAAA,QAAQ,EAAG,UADV;AACsBF,QAAAA,OAAO,YAAML,UAAU,CAACG,IAAX,CAAgBC,QAAtB;AAD7B,OAFK,EAIL;AACDG,QAAAA,QAAQ,EAAG,gBADV;AAC4BF,QAAAA,OAAO,EAAGL,UAAU,CAACK;AADjD,OAJK,EAML;AACDE,QAAAA,QAAQ,EAAG,UADV;AACsBF,QAAAA,OAAO,EAAGL,UAAU,CAACQ,MAAX,CAAkB,CAAlB,kBAAwB;AAAK,UAAA,GAAG,kCAA2BR,UAAU,CAACQ,MAAX,CAAkB,CAAlB,EAAqBC,GAAhD;AAAR;AADxD,OANK,EAQL;AACDF,QAAAA,QAAQ,EAAG,QADV;AACoBF,QAAAA,OAAO,uCAAiCR,EAAjC;AAD3B,OARK;AAHV,MADF,eAqBE,oBAAC,eAAD,qBACA,oBAAC,QAAD;AAAU,MAAA,GAAG,EAAEG,UAAU,CAACH,EAA1B;AAA8B,MAAA,IAAI,EAAEG,UAApC;AAAgD,MAAA,aAAa,EAAI;AAAjE,MADA,CArBF;AADJ;AA2BH,CAlCD;;AAwCAJ,IAAI,CAACc,eAAL;AAAA,uEAAuB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACfd,YAAAA,EADe,GACV,UAASc,OAAO,CAACC,KAAR,CAAcf,EAAvB,EAA4B,EAA5B,CADU;AAErBc,YAAAA,OAAO,CAACE,KAAR,CAAcC,QAAd,CAAuB;AACrBC,cAAAA,IAAI,EAAEvB,iBADe;AAErBwB,cAAAA,IAAI,EAAEnB;AAFe,aAAvB;AAIAc,YAAAA,OAAO,CAACE,KAAR,CAAcC,QAAd,CAAuB;AACrBC,cAAAA,IAAI,EAAGtB,oBADc;AAErBuB,cAAAA,IAAI,EAAGnB;AAFc,aAAvB;AAIAI,YAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCL,EAApC;AAVqB,6CAWd;AAAEA,cAAAA,EAAE,EAAFA;AAAF,aAXc;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAcA,eAAeD,IAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport Helmet from 'react-helmet';\r\nimport { LOAD_POST_REQUEST, LOAD_COMMENT_REQUEST } from '../reducers/post';\r\nimport PostCard from '../containers/PostCard';\r\nimport { PostCardWrapper } from './Style/PagesStyle';\r\n\r\nconst Post = ({ id }) => {\r\n    const { singlePost } = useSelector(state => state.post);\r\n\r\n    console.log('singlePost', singlePost);\r\n    if (!singlePost) {\r\n      return null;\r\n    }\r\n    return (\r\n        <div>\r\n          <Helmet\r\n            title = {`${singlePost.User.nickname}님의 글`}\r\n            description = {singlePost.content}\r\n            meta = {[{\r\n              name : 'description', content : singlePost.content,\r\n            }, {\r\n              property : 'og:title', content : `${singlePost.User.nickname}님의 게시글`,\r\n            }, {\r\n              property : 'og:description', content : singlePost.content,\r\n            }, {\r\n              property : 'og:image', content : singlePost.Images[0] && <img src={`http://localhost:7070/${singlePost.Images[0].src}`}/>\r\n            }, {\r\n              property : 'og:url', content : `http://localhost:3060/post/${id}`,\r\n            }]}\r\n          />\r\n          {/* <div>{singlePost.content}</div>\r\n          <div>{singlePost.User.nickname}</div>\r\n          <div>\r\n              {singlePost.Images[0] && <img src={`http://localhost:7070/${singlePost.Images[0].src}`}/>}\r\n          </div> */}\r\n          <PostCardWrapper>\r\n          <PostCard key={singlePost.id} post={singlePost} commentOpened = {true}/>\r\n          </PostCardWrapper>\r\n        </div>\r\n    );\r\n};\r\n\r\nPost.propTypes = {\r\n  id: PropTypes.number.isRequired,\r\n};\r\n\r\nPost.getInitialProps = async (context) => {\r\n  const id = parseInt(context.query.id , 10)\r\n  context.store.dispatch({\r\n    type: LOAD_POST_REQUEST,\r\n    data: id,\r\n  });\r\n  context.store.dispatch({\r\n    type : LOAD_COMMENT_REQUEST,\r\n    data : id,\r\n  });\r\n  console.log('POST getInitialProps', id);\r\n  return { id }\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}