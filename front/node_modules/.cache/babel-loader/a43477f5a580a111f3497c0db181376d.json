{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n// import React, { useEffect } from 'react';\n// import { useSelector, useDispatch } from 'react-redux';\n// import PropTypes from 'prop-types';\n// import Helmet from 'react-helmet';\n// import { LOAD_POST_REQUEST, LOAD_COMMENT_REQUEST } from '../reducers/post';\n// import PostCard from '../containers/PostCard';\n// import { PostCardWrapper } from './Style/PagesStyle';\n// const Post = ({ id }) => {\n//     const { singlePost } = useSelector(state => state.post);\n//     console.log('singlePost', singlePost);\n//     return (\n//         <div>\n//           <Helmet\n//             title = {`${singlePost.User.nickname}님의 글`}\n//             description = {singlePost.content}\n//             meta = {[{\n//               name : 'description', content : singlePost.content,\n//             }, {\n//               property : 'og:title', content : `${singlePost.User.nickname}님의 게시글`,\n//             }, {\n//               property : 'og:description', content : singlePost.content,\n//             }, {\n//               property : 'og:image', content : singlePost.Images[0] && <img src={`http://localhost:7070/${singlePost.Images[0].src}`}/>\n//             }, {\n//               property : 'og:url', content : `http://localhost:3060/post/${id}`,\n//             }]}\n//           />\n//           {/* <div>{singlePost.content}</div>\n//           <div>{singlePost.User.nickname}</div>\n//           <div>\n//               {singlePost.Images[0] && <img src={`http://localhost:7070/${singlePost.Images[0].src}`}/>}\n//           </div> */}\n//           <PostCardWrapper>\n//           <PostCard key={singlePost.id} post={singlePost} commentOpened = {true}/>\n//           </PostCardWrapper>\n//         </div>\n//     );\n// };\n// Post.propTypes = {\n//   id: PropTypes.number.isRequired,\n// };\n// Post.getInitialProps = async (context) => {\n//   const id = parseInt(context.query.id , 10)\n//   context.store.dispatch({\n//     type: LOAD_POST_REQUEST,\n//     data: id,\n//   });\n//   context.store.dispatch({\n//     type : LOAD_COMMENT_REQUEST,\n//     data : id,\n//   });\n//   console.log('POST getInitialProps', id);\n//   return { id }\n// };\n// export default Post;\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport Helmet from 'react-helmet';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\n\nvar Post = function Post(_ref) {\n  var id = _ref.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost;\n\n  console.log('singlePost', singlePost);\n  return (/*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Helmet, {\n      title: \"\".concat(singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAE00\"),\n      description: singlePost.content,\n      meta: [{\n        name: 'description',\n        content: singlePost.content\n      }, {\n        property: 'og:title',\n        content: \"\".concat(singlePost.User.nickname, \"\\uB2D8\\uC758 \\uAC8C\\uC2DC\\uAE00\")\n      }, {\n        property: 'og:description',\n        content: singlePost.content\n      }, {\n        property: 'og:image',\n        content: singlePost.Images[0] && \"http://localhost:3065/\".concat(singlePost.Images[0].src)\n      }, {\n        property: 'og:url',\n        content: \"http://localhost:3060/post/\".concat(id)\n      }]\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      itemScope: \"content\"\n    }, singlePost.content), /*#__PURE__*/React.createElement(\"div\", {\n      itemScope: \"author\"\n    }, singlePost.User.nickname), /*#__PURE__*/React.createElement(\"div\", null, singlePost.Images[0] && /*#__PURE__*/React.createElement(\"img\", {\n      src: \"http://localhost:3065/\".concat(singlePost.Images[0].src)\n    })))\n  );\n};\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            context.store.dispatch({\n              type: LOAD_POST_REQUEST,\n              data: context.query.id\n            });\n            return _context.abrupt(\"return\", {\n              id: _parseInt(context.query.id, 10)\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nPost.propTypes = {\n  id: PropTypes.number.isRequired\n};\nexport default Post;","map":null,"metadata":{},"sourceType":"module"}