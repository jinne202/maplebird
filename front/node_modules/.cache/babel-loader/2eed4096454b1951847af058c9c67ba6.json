{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React, { useEffect, useCallback, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Button, List, Card, Icon } from 'antd';\nimport NicknameEditForm from '../containers/NicknameEditForm';\nimport { LOAD_FOLLOWERS_REQUEST, LOAD_FOLLOWINGS_REQUEST, UNFOLLOW_USER_REQUEST, REMOVE_FOLLOWER_REQUEST } from '../reducers/user';\nimport { LOAD_USER_POST_REQUEST } from '../reducers/post';\nimport PostCard from '../containers/PostCard';\nimport FollowList from '../containers/FollowList';\n\nvar Profile = function Profile() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      followingList = _useSelector.followingList,\n      followerList = _useSelector.followerList,\n      hasMoreFollower = _useSelector.hasMoreFollower,\n      hasMoreFollowing = _useSelector.hasMoreFollowing;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePost = _useSelector2.hasMorePost;\n\n  var onUnfollow = useCallback(function (userId) {\n    return function () {\n      dispatch({\n        type: UNFOLLOW_USER_REQUEST,\n        data: userId\n      });\n    };\n  }, []);\n  var onRemoveFollower = useCallback(function (userId) {\n    return function () {\n      dispatch({\n        type: REMOVE_FOLLOWER_REQUEST,\n        data: userId\n      });\n    };\n  }, []);\n  var loadMoreFollowings = useCallback(function () {\n    dispatch({\n      type: LOAD_FOLLOWINGS_REQUEST,\n      offset: followingList.length\n    });\n  }, [followingList.length]);\n  var loadMoreFollowers = useCallback(function () {\n    dispatch({\n      type: LOAD_FOLLOWERS_REQUEST,\n      offset: followerList.length\n    });\n  }, [followerList.length]);\n  return (/*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        margin: '40px 0 0'\n      }\n    }, /*#__PURE__*/React.createElement(NicknameEditForm, null), /*#__PURE__*/React.createElement(List, {\n      style: {\n        marginBottom: '20px'\n      },\n      grid: {\n        gutter: 4,\n        xs: 2,\n        md: 3\n      },\n      size: \"small\",\n      header: /*#__PURE__*/React.createElement(\"div\", null, \" Following List\"),\n      loadMore: hasMoreFollowing && /*#__PURE__*/React.createElement(Button, {\n        style: {\n          width: '90%',\n          marginLeft: '5%',\n          marginBottom: '15px'\n        },\n        onClick: loadMoreFollowings\n      }, \"More\"),\n      bordered: true,\n      dataSource: followingList,\n      renderItem: function renderItem(item) {\n        return (/*#__PURE__*/React.createElement(List.Item, {\n            style: {\n              marginTop: '20px'\n            }\n          }, /*#__PURE__*/React.createElement(Card, {\n            actions: [/*#__PURE__*/React.createElement(Icon, {\n              key: \"stop\",\n              type: \"stop\",\n              onClick: onUnfollow(item.id)\n            })]\n          }, /*#__PURE__*/React.createElement(Card.Meta, {\n            description: item.nickname\n          })))\n        );\n      }\n    }), /*#__PURE__*/React.createElement(List, {\n      style: {\n        marginBottom: '20px'\n      },\n      grid: {\n        gutter: 4,\n        xs: 2,\n        md: 3\n      },\n      size: \"small\",\n      header: /*#__PURE__*/React.createElement(\"div\", null, \" Follower List\"),\n      loadMore: hasMoreFollower && /*#__PURE__*/React.createElement(Button, {\n        style: {\n          width: '90%',\n          marginLeft: '5%',\n          marginBottom: '15px'\n        },\n        onClick: loadMoreFollowers\n      }, \"More\"),\n      bordered: true,\n      dataSource: followerList,\n      renderItem: function renderItem(item) {\n        return (/*#__PURE__*/React.createElement(List.Item, {\n            style: {\n              marginTop: '20px'\n            }\n          }, /*#__PURE__*/React.createElement(Card, {\n            actions: [/*#__PURE__*/React.createElement(Icon, {\n              key: \"stop\",\n              type: \"stop\",\n              onClick: onRemoveFollower(item.id)\n            })]\n          }, /*#__PURE__*/React.createElement(Card.Meta, {\n            description: item.nickname\n          })))\n        );\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", null, mainPosts.map(function (c) {\n      return (/*#__PURE__*/React.createElement(PostCard, {\n          key: +c.createdAt,\n          post: c\n        })\n      );\n    }))))\n  );\n};\n\nProfile.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var state;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            state = context.store.getState(); // 이 직전에 LOAD_USERS_REQUEST가 _app.js에서 실행된 후 뒤가 실행됨 그래서 load user request가 실행이 끝나야 state.user.me가 생김\n\n            context.store.dispatch({\n              type: LOAD_FOLLOWERS_REQUEST,\n              data: state.user.me && state.user.me.id\n            });\n            context.store.dispatch({\n              type: LOAD_FOLLOWINGS_REQUEST,\n              data: state.user.me && state.user.me.id\n            });\n            context.store.dispatch({\n              type: LOAD_USER_POST_REQUEST,\n              data: state.user.me && state.user.me.id\n            }); // 이 쯤에서 LOAD USER USCCESS가 되어 me가 생김! 순서의 문제이다 saga에서 주소가 0일 때 내 정보를 불러오게 처리함!\n\n          case 4:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Profile;","map":null,"metadata":{},"sourceType":"module"}