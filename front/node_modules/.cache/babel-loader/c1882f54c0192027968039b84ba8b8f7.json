{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport Slick from 'react-slick';\nimport { Overlay, Header, CloseBtn, SlickWrapper, ImageWrapper, Indicator } from './style';\n\nvar ImagesZoom = function ImagesZoom(_ref) {\n  var images = _ref.images,\n      onClose = _ref.onClose;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentSlide = _useState2[0],\n      setCurrentSlide = _useState2[1];\n\n  return (/*#__PURE__*/React.createElement(Overlay, null, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(H1, null, \"Image\"), /*#__PURE__*/React.createElement(CloseBtn, {\n      type: \"close\",\n      onClick: onClose\n    })), /*#__PURE__*/React.createElement(SlickWrapper, null, /*#__PURE__*/React.createElement(Slick, {\n      initialSlide: 0 //몇번째 이미지를 처음으로 보여줄지\n      ,\n      afterChange: function afterChange(slide) {\n        return setCurrentSlide(slide);\n      },\n      infinite: false,\n      arrows: true,\n      slidesToShow: 1,\n      slidesToScroll: 1\n    }, images.map(function (v) {\n      return (/*#__PURE__*/React.createElement(ImageWrapper, null, /*#__PURE__*/React.createElement(\"img\", {\n          src: \"http://localhost:7070/\".concat(v.src)\n        }))\n      );\n    })), /*#__PURE__*/React.createElement(Indicator, null, /*#__PURE__*/React.createElement(\"div\", null, currentSlide + 1, \" / \", images.length))))\n  );\n};\n\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string\n  })).isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ImagesZoom;","map":{"version":3,"sources":["C:/project/nodebird/front/components/ImagesZoom/index.js"],"names":["React","useState","PropTypes","Slick","Overlay","Header","CloseBtn","SlickWrapper","ImageWrapper","Indicator","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","slide","map","v","src","length","propTypes","arrayOf","shape","string","isRequired","func"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,SAASC,OAAT,EAAkBC,MAAlB,EAA0BC,QAA1B,EAAoCC,YAApC,EAAkDC,YAAlD,EAAgEC,SAAhE,QAAiF,SAAjF;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa,OAAyB;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,kBACAX,QAAQ,CAAC,CAAD,CADR;AAAA;AAAA,MACjCY,YADiC;AAAA,MACnBC,eADmB;;AAGxC,uBACI,oBAAC,OAAD,qBACI,oBAAC,MAAD,qBACI,oBAAC,EAAD,gBADJ,eAEI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,OAAf;AAAuB,MAAA,OAAO,EAAEF;AAAhC,MAFJ,CADJ,eAKI,oBAAC,YAAD,qBACI,oBAAC,KAAD;AACI,MAAA,YAAY,EAAE,CADlB,CACqB;AADrB;AAEI,MAAA,WAAW,EAAE,qBAACG,KAAD;AAAA,eAAWD,eAAe,CAACC,KAAD,CAA1B;AAAA,OAFjB;AAGI,MAAA,QAAQ,EAAE,KAHd;AAII,MAAA,MAAM,MAJV;AAKI,MAAA,YAAY,EAAE,CALlB;AAMI,MAAA,cAAc,EAAE;AANpB,OAQMJ,MAAM,CAACK,GAAP,CAAW,UAACC,CAAD,EAAO;AAChB,2BACI,oBAAC,YAAD,qBACI;AAAK,UAAA,GAAG,kCAA2BA,CAAC,CAACC,GAA7B;AAAR,UADJ;AADJ;AAKH,KANC,CARN,CADJ,eAiBI,oBAAC,SAAD,qBACI,iCACKL,YAAY,GAAG,CADpB,SAC0BF,MAAM,CAACQ,MADjC,CADJ,CAjBJ,CALJ;AADJ;AA+BH,CAlCD;;AAoCAT,UAAU,CAACU,SAAX,GAAuB;AACnBT,EAAAA,MAAM,EAAGT,SAAS,CAACmB,OAAV,CAAkBnB,SAAS,CAACoB,KAAV,CAAgB;AACvCJ,IAAAA,GAAG,EAAGhB,SAAS,CAACqB;AADuB,GAAhB,CAAlB,EAELC,UAHe;AAInBZ,EAAAA,OAAO,EAAGV,SAAS,CAACuB,IAAV,CAAeD;AAJN,CAAvB;AAOA,eAAed,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport Slick from 'react-slick';\r\nimport { Overlay, Header, CloseBtn, SlickWrapper, ImageWrapper, Indicator } from './style'\r\n\r\nconst ImagesZoom = ({ images, onClose }) => {\r\n    const [currentSlide, setCurrentSlide] = useState(0);\r\n\r\n    return(\r\n        <Overlay>\r\n            <Header>\r\n                <H1>Image</H1>\r\n                <CloseBtn type=\"close\" onClick={onClose}/>\r\n            </Header>\r\n            <SlickWrapper>\r\n                <Slick\r\n                    initialSlide={0} //몇번째 이미지를 처음으로 보여줄지\r\n                    afterChange={(slide) => setCurrentSlide(slide)}\r\n                    infinite={false}\r\n                    arrows\r\n                    slidesToShow={1}\r\n                    slidesToScroll={1}\r\n                >\r\n                    { images.map((v) => {\r\n                        return (\r\n                            <ImageWrapper>\r\n                                <img src={`http://localhost:7070/${v.src}`}/>\r\n                            </ImageWrapper>\r\n                        )\r\n                    })}\r\n                </Slick>\r\n                <Indicator>\r\n                    <div>\r\n                        {currentSlide + 1} / {images.length}\r\n                    </div>\r\n                </Indicator>\r\n            </SlickWrapper>\r\n        </Overlay>\r\n    )\r\n};\r\n\r\nImagesZoom.propTypes = {\r\n    images : PropTypes.arrayOf(PropTypes.shape({\r\n        src : PropTypes.string,\r\n    })).isRequired,\r\n    onClose : PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImagesZoom;"]},"metadata":{},"sourceType":"module"}