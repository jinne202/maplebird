{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PostCard from '../containers/PostCard';\nimport { Avatar, Card } from 'antd';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\nimport { LOAD_USER_POST_REQUEST } from '../reducers/post';\nimport { UserCardWrapper } from './Style/PagesStyle';\n\nvar User = function User() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      userInfo = _useSelector2.userInfo;\n\n  return (/*#__PURE__*/React.createElement(UserCardWrapper, null, userInfo ? /*#__PURE__*/React.createElement(Card, {\n      actions: [/*#__PURE__*/React.createElement(\"div\", {\n        key: \"twit\"\n      }, \"\\uC9F9\\uC9F9 \", /*#__PURE__*/React.createElement(\"br\", null), \" \", userInfo.Posts, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n        key: \"following\"\n      }, \"\\uD314\\uB85C\\uC789 \", /*#__PURE__*/React.createElement(\"br\", null), \" \", userInfo.Followings, \" \"), /*#__PURE__*/React.createElement(\"div\", {\n        key: \"follower\"\n      }, \"\\uD314\\uB85C\\uC6CC \", /*#__PURE__*/React.createElement(\"br\", null), \" \", userInfo.Followers, \" \")]\n    }, /*#__PURE__*/React.createElement(Card.Meta, {\n      avatar: /*#__PURE__*/React.createElement(Avatar, null, userInfo.nickname[0]),\n      title: userInfo.nickname\n    })) : null, mainPosts.map(function (c) {\n      return (/*#__PURE__*/React.createElement(PostCard, {\n          key: c.id,\n          post: c\n        })\n      );\n    }))\n  );\n};\n\nUser.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var id;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            id = _parseInt(context.query.id, 10);\n            console.log('user getInitialProps', id);\n            context.store.dispatch({\n              type: LOAD_USER_REQUEST,\n              data: id\n            });\n            context.store.dispatch({\n              type: LOAD_USER_POST_REQUEST,\n              data: id\n            }); // 서버쪽에서 완성된 데이터들이 여기서 돌아오는 것 next가 getInitialPorps로 ssr을 편하게 한다! \n\n            return _context.abrupt(\"return\", {\n              id: id\n            });\n\n          case 5:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default User;","map":{"version":3,"sources":["C:/project/nodebird/front/pages/user.js"],"names":["React","useEffect","useDispatch","useSelector","PostCard","Avatar","Card","LOAD_USER_REQUEST","LOAD_USER_POST_REQUEST","UserCardWrapper","User","dispatch","state","post","mainPosts","user","userInfo","Posts","Followings","Followers","nickname","map","c","id","getInitialProps","context","query","console","log","store","type","data"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AAEA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,MAAT,EAAiBC,IAAjB,QAA6B,MAA7B;AACA,SAASC,iBAAT,QAAkC,kBAAlC;AACA,SAASC,sBAAT,QAAuC,kBAAvC;AACA,SAASC,eAAT,QAAgC,oBAAhC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACf,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AADe,qBAEOC,WAAW,CAAC,UAAAS,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAFlB;AAAA,MAEPC,SAFO,gBAEPA,SAFO;;AAAA,sBAGMX,WAAW,CAAC,UAAAS,KAAK;AAAA,WAAIA,KAAK,CAACG,IAAV;AAAA,GAAN,CAHjB;AAAA,MAGPC,QAHO,iBAGPA,QAHO;;AAKf,uBACI,oBAAC,eAAD,QACMA,QAAQ,gBACF,oBAAC,IAAD;AACA,MAAA,OAAO,EAAI,cACP;AAAK,QAAA,GAAG,EAAC;AAAT,uCAAmB,+BAAnB,OAA0BA,QAAQ,CAACC,KAAnC,MADO,eAEP;AAAK,QAAA,GAAG,EAAC;AAAT,6CAAyB,+BAAzB,OAAgCD,QAAQ,CAACE,UAAzC,MAFO,eAGP;AAAK,QAAA,GAAG,EAAC;AAAT,6CAAwB,+BAAxB,OAA+BF,QAAQ,CAACG,SAAxC,MAHO;AADX,oBAMA,oBAAC,IAAD,CAAM,IAAN;AACI,MAAA,MAAM,eAAI,oBAAC,MAAD,QAASH,QAAQ,CAACI,QAAT,CAAkB,CAAlB,CAAT,CADd;AAEI,MAAA,KAAK,EAAIJ,QAAQ,CAACI;AAFtB,MANA,CADE,GAaJ,IAdV,EAeMN,SAAS,CAACO,GAAV,CAAc,UAAAC,CAAC;AAAA,2BACb,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAIA,CAAC,CAACC,EAAnB;AAAuB,UAAA,IAAI,EAAID;AAA/B;AADa;AAAA,KAAf,CAfN;AADJ;AAqBH,CA1BD;;AA2BIZ,IAAI,CAACc,eAAL;AAAA,sEAAuB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACbF,YAAAA,EADa,GACR,UAASE,OAAO,CAACC,KAAR,CAAcH,EAAvB,EAA2B,EAA3B,CADQ;AAEnBI,YAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCL,EAApC;AACAE,YAAAA,OAAO,CAACI,KAAR,CAAclB,QAAd,CAAuB;AACrBmB,cAAAA,IAAI,EAAEvB,iBADe;AAErBwB,cAAAA,IAAI,EAAER;AAFe,aAAvB;AAIAE,YAAAA,OAAO,CAACI,KAAR,CAAclB,QAAd,CAAuB;AACrBmB,cAAAA,IAAI,EAAEtB,sBADe;AAErBuB,cAAAA,IAAI,EAAER;AAFe,aAAvB,EAPmB,CAWnB;;AAXmB,6CAYZ;AAAEA,cAAAA,EAAE,EAAFA;AAAF,aAZY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAeJ,eAAeb,IAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux'\r\nimport PostCard from '../containers/PostCard';\r\nimport { Avatar, Card } from 'antd';\r\nimport { LOAD_USER_REQUEST } from '../reducers/user';\r\nimport { LOAD_USER_POST_REQUEST } from '../reducers/post';\r\nimport { UserCardWrapper } from './Style/PagesStyle';\r\n\r\nconst User = () => {\r\n    const dispatch = useDispatch();\r\n    const { mainPosts } = useSelector(state => state.post);\r\n    const { userInfo } = useSelector(state => state.user);\r\n\r\n    return(\r\n        <UserCardWrapper>\r\n            { userInfo\r\n                ? ( <Card\r\n                    actions = {[\r\n                        <div key=\"twit\">짹짹 <br/> {userInfo.Posts} </div>,\r\n                        <div key=\"following\">팔로잉 <br/> {userInfo.Followings} </div>,\r\n                        <div key=\"follower\">팔로워 <br/> {userInfo.Followers} </div>,\r\n                    ]}>\r\n                    <Card.Meta\r\n                        avatar = {<Avatar>{userInfo.nickname[0]}</Avatar>}\r\n                        title = {userInfo.nickname}\r\n                    />\r\n                </Card>\r\n                )\r\n                : null}\r\n            { mainPosts.map(c => (\r\n                <PostCard key = {c.id} post = {c} />\r\n            )) }\r\n        </UserCardWrapper>\r\n    );\r\n};\r\n    User.getInitialProps = async (context) => {\r\n        const id = parseInt(context.query.id, 10);\r\n        console.log('user getInitialProps', id);\r\n        context.store.dispatch({\r\n          type: LOAD_USER_REQUEST,\r\n          data: id,\r\n        });\r\n        context.store.dispatch({\r\n          type: LOAD_USER_POST_REQUEST,\r\n          data: id,\r\n        });\r\n        // 서버쪽에서 완성된 데이터들이 여기서 돌아오는 것 next가 getInitialPorps로 ssr을 편하게 한다! \r\n        return { id };\r\n};\r\n\r\nexport default User;"]},"metadata":{},"sourceType":"module"}