{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\n\nvar Post = function Post(_ref) {\n  var id = _ref.id;\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost;\n\n  return (/*#__PURE__*/React.createElement(React.Fragment, null, \"console.log(\", singlePost.id, \");\")\n  );\n};\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            context.store.dispatch({\n              type: LOAD_POST_REQUEST,\n              data: context.query.id\n            });\n            return _context.abrupt(\"return\", {\n              id: _parseInt(context.query.id, 10)\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nPost.propTypes = {\n  id: PropTypes.number.isRequired\n};\nexport default Post;","map":{"version":3,"sources":["C:/project/nodebird/front/pages/post.js"],"names":["React","useSelector","PropTypes","LOAD_POST_REQUEST","Post","id","state","post","singlePost","getInitialProps","context","store","dispatch","type","data","query","propTypes","number","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAY;AAAA,MAATC,EAAS,QAATA,EAAS;;AAAA,qBACEJ,WAAW,CAAC,UAAAK,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CADb;AAAA,MACbC,UADa,gBACbA,UADa;;AAErB,uBACI,0DAMiBA,UAAU,CAACH,EAN5B;AADJ;AAUH,CAZD;;AAcAD,IAAI,CAACK,eAAL;AAAA,uEAAuB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AACnBA,YAAAA,OAAO,CAACC,KAAR,CAAcC,QAAd,CAAuB;AACrBC,cAAAA,IAAI,EAAEV,iBADe;AAErBW,cAAAA,IAAI,EAAEJ,OAAO,CAACK,KAAR,CAAcV;AAFC,aAAvB;AADmB,6CAKZ;AAAEA,cAAAA,EAAE,EAAE,UAASK,OAAO,CAACK,KAAR,CAAcV,EAAvB,EAA2B,EAA3B;AAAN,aALY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAQAD,IAAI,CAACY,SAAL,GAAiB;AACbX,EAAAA,EAAE,EAAEH,SAAS,CAACe,MAAV,CAAiBC;AADR,CAAjB;AAIA,eAAed,IAAf","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { LOAD_POST_REQUEST } from '../reducers/post';\r\n\r\nconst Post = ({ id }) => {\r\n    const { singlePost } = useSelector(state => state.post);\r\n    return (\r\n        <>\r\n            {/* <div>{singlePost.content}</div>\r\n            <div>{singlePost.User.nickname}</div>\r\n            <div>\r\n                {singlePost.Images[0] && <img src={`http://localhost:7070/${post.Images[0].src}`}/>}\r\n            </div> */}\r\n            console.log({singlePost.id});\r\n        </>\r\n    )\r\n};\r\n\r\nPost.getInitialProps = async (context) => {\r\n    context.store.dispatch({\r\n      type: LOAD_POST_REQUEST,\r\n      data: context.query.id,\r\n    });\r\n    return { id: parseInt(context.query.id, 10) };\r\n  };\r\n\r\nPost.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}