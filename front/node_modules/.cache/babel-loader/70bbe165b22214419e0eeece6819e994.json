{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from 'react';\nimport AppLayout from '../components/AppLayout';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\nimport axios from 'axios';\nimport Helmet from 'react-helmet';\nimport { Container } from 'next/app';\n\nvar NodeBird = function NodeBird(_ref) {\n  var Component = _ref.Component,\n      store = _ref.store,\n      pageProps = _ref.pageProps;\n  return (/*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Provider, {\n      store: store\n    }, /*#__PURE__*/React.createElement(Helmet, {\n      title: \"MAPLE AMUNA\",\n      htmlAttributes: {\n        lang: 'ko'\n      },\n      meta: [{\n        charset: 'UTF-8'\n      }, {\n        name: 'viewport',\n        content: 'width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=yes,viewport-fit=cover'\n      }, {\n        'http-equiv': 'X-UA-Compatible',\n        content: 'IE=edge'\n      }, {\n        name: 'description',\n        content: 'JINNE NODEBIRD'\n      }, {\n        name: 'og:description',\n        content: 'JINNE NODEBIRD'\n      }, {\n        name: 'og:title',\n        content: 'MAPLE AMUNA'\n      }, {\n        property: 'og:type',\n        content: 'website'\n      }, {\n        property: 'og:image',\n        content: 'https://localhost:3060/favicon.ico'\n      }],\n      link: [{\n        rel: 'shortcut icon',\n        href: '/favicon.ico'\n      }, {\n        rel: 'StyleSheet',\n        href: 'https://cdnjs.cloudflare.com/ajax/libs/antd/3.26.9/antd.css'\n      }, {\n        rel: 'stylesheet',\n        href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css'\n      }, {\n        rel: 'stylesheet',\n        href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css'\n      }]\n    }), /*#__PURE__*/React.createElement(AppLayout, null, /*#__PURE__*/React.createElement(Component, pageProps))))\n  );\n};\n\n// next에서 실행시켜주는 부분\nNodeBird.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var ctx, Component, pageProps, state, cookie;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctx = context.ctx, Component = context.Component;\n            pageProps = {};\n            state = ctx.store.getState();\n            cookie = ctx.isServer ? ctx.req.headers.cookie : '';\n            axios.defaults.headers.Cookie = '';\n\n            if (ctx.isServer && cookie) {\n              axios.defaults.headers.Cookie = cookie;\n            }\n\n            if (!state.user.me) {\n              ctx.store.dispatch({\n                type: LOAD_USER_REQUEST // 쿠키로 정보 불러오게 원래 AppLayout 안에 들어있던거 갖고온 것 순서가 중요! 내 정보 먼저 가져오고 밑에 component.getInitialProps 사용\n\n              });\n            }\n\n            if (!Component.getInitialProps) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 10;\n            return Component.getInitialProps(ctx);\n\n          case 10:\n            _context.t0 = _context.sent;\n\n            if (_context.t0) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.t0 = {};\n\n          case 13:\n            pageProps = _context.t0;\n\n          case 14:\n            return _context.abrupt(\"return\", {\n              pageProps: pageProps\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // 고차 컴포넌트라고 부름 기존 component의 기능을 확장해준다. withRedux라는게 Nodebird component에 props로 store을 넣어주는 역할을 한다. 그 store을 어떻게 넣어줄지를 적어야 함\n// 그냥 외우는게 좋다 어차피 모든 프로젝트에 다 똑같이 쓰인다\n\n\nvar configureStore = function configureStore(initialState, options) {\n  var sagaMiddleware = createSagaMiddleware(); // 넣고싶은 미들웨어는 [] 여기 안에다가\n\n  var middlewares = [sagaMiddleware]; // const middlewares = [sagaMiddleware, (store) => (next) => (action) => {\n  //     console.log(action);\n  //     next(action);\n  // }];\n  // 리덕스의 기능을 향상시키다 middleware을 apply해서!\n\n  var enhancer = process.env.NODE_ENV === 'production' ? compose(applyMiddleware.apply(void 0, middlewares)) : compose(applyMiddleware.apply(void 0, middlewares), // typeof window !== 'undefined' 은 !options.isServer랑 같다\n  // __REDUX_DEVTOOLS_EXTENSION__ 이거는 배포할때는 거의 뺀다 redux가 어떻게 돌아가는지 노출되어버림\n  !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n    return f;\n  });\n  var store = createStore(reducer, initialState, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga); // 이 부분은 별로 바뀔 일이 없다 연결하는 부분!\n\n  return store;\n};\n\nexport default withRedux(configureStore)(withReduxSaga(NodeBird));","map":{"version":3,"sources":["C:/project/nodebird/front/pages/_app.js"],"names":["React","AppLayout","Provider","createStore","compose","applyMiddleware","createSagaMiddleware","withRedux","withReduxSaga","reducer","rootSaga","LOAD_USER_REQUEST","axios","Helmet","Container","NodeBird","Component","store","pageProps","lang","charset","name","content","property","rel","href","getInitialProps","context","ctx","state","getState","cookie","isServer","req","headers","defaults","Cookie","user","me","dispatch","type","configureStore","initialState","options","sagaMiddleware","middlewares","enhancer","process","env","NODE_ENV","window","__REDUX_DEVTOOLS_EXTENSION__","f","sagaTask","run"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport AppLayout from '../components/AppLayout';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore, compose, applyMiddleware } from 'redux';\r\nimport createSagaMiddleware from 'redux-saga';\r\nimport withRedux from 'next-redux-wrapper';\r\nimport withReduxSaga from 'next-redux-saga';\r\nimport reducer from '../reducers';\r\nimport rootSaga from '../sagas';\r\nimport { LOAD_USER_REQUEST } from '../reducers/user';\r\nimport axios from 'axios';\r\nimport Helmet from 'react-helmet';\r\nimport { Container } from 'next/app';\r\n\r\nconst NodeBird = ({ Component, store, pageProps }) => {\r\n    return (\r\n        <Container>\r\n            {/* provider이 가장 최상위 부모라 그 아래 자식들이 provider에 접근할 수 있음 */}\r\n            <Provider store = {store}>\r\n                <Helmet\r\n                    title = \"MAPLE AMUNA\"\r\n                    htmlAttributes = {{ lang: 'ko' }}\r\n                    meta = {[{\r\n                        charset: 'UTF-8',\r\n                    }, {\r\n                        name : 'viewport',\r\n                        content : 'width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=yes,viewport-fit=cover',\r\n                    }, {\r\n                        'http-equiv' : 'X-UA-Compatible', content : 'IE=edge',\r\n                    }, {\r\n                        name : 'description', content : 'JINNE NODEBIRD',\r\n                    }, {\r\n                        name : 'og:description', content : 'JINNE NODEBIRD'\r\n                    }, {\r\n                        name : 'og:title', content : 'MAPLE AMUNA'\r\n                    }, {\r\n                        property : 'og:type', content : 'website',\r\n                    }, {\r\n                        property: 'og:image', content: 'https://localhost:3060/favicon.ico',\r\n                    }]}\r\n                    link = {[{\r\n                        rel: 'shortcut icon', href: '/favicon.ico',\r\n                    },\r\n                        {\r\n                        rel : 'StyleSheet', href : 'https://cdnjs.cloudflare.com/ajax/libs/antd/3.26.9/antd.css'\r\n                    }, {\r\n                        rel : 'stylesheet', href : 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css'\r\n                    }, {\r\n                        rel : 'stylesheet', href : 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css'\r\n                    }]}\r\n                />\r\n                <AppLayout>\r\n                    <Component {...pageProps} />\r\n                </AppLayout>\r\n            </Provider>\r\n        </Container>\r\n    )\r\n};\r\n\r\n\r\nNodeBird.propTypes = {\r\n    Component : PropTypes.elementType.isRequired,\r\n    store : PropTypes.object.isRequired,\r\n    pageProps: PropTypes.object.isRequired,\r\n};\r\n\r\n// next에서 실행시켜주는 부분\r\nNodeBird.getInitialProps = async (context) => {\r\n    const { ctx, Component } = context;\r\n    let pageProps = {};\r\n    const state = ctx.store.getState();\r\n    const cookie = ctx.isServer ? ctx.req.headers.cookie : '';\r\n    axios.defaults.headers.Cookie = '';\r\n    if (ctx.isServer && cookie) {\r\n        axios.defaults.headers.Cookie = cookie;\r\n    }\r\n    if (!state.user.me) {\r\n        ctx.store.dispatch({\r\n            type: LOAD_USER_REQUEST,\r\n            // 쿠키로 정보 불러오게 원래 AppLayout 안에 들어있던거 갖고온 것 순서가 중요! 내 정보 먼저 가져오고 밑에 component.getInitialProps 사용\r\n        });\r\n    }\r\n    if (Component.getInitialProps) {\r\n        pageProps = await Component.getInitialProps(ctx) || {};\r\n    }\r\n    return { pageProps };\r\n};\r\n\r\n// 고차 컴포넌트라고 부름 기존 component의 기능을 확장해준다. withRedux라는게 Nodebird component에 props로 store을 넣어주는 역할을 한다. 그 store을 어떻게 넣어줄지를 적어야 함\r\n// 그냥 외우는게 좋다 어차피 모든 프로젝트에 다 똑같이 쓰인다\r\nconst configureStore = (initialState, options) => {\r\n    const sagaMiddleware = createSagaMiddleware();\r\n    // 넣고싶은 미들웨어는 [] 여기 안에다가\r\n    const middlewares = [sagaMiddleware];\r\n    // const middlewares = [sagaMiddleware, (store) => (next) => (action) => {\r\n    //     console.log(action);\r\n    //     next(action);\r\n    // }];\r\n    // 리덕스의 기능을 향상시키다 middleware을 apply해서!\r\n    const enhancer = process.env.NODE_ENV === 'production'\r\n      ? compose(applyMiddleware(...middlewares))\r\n      : compose(\r\n        applyMiddleware(...middlewares),\r\n        // typeof window !== 'undefined' 은 !options.isServer랑 같다\r\n        // __REDUX_DEVTOOLS_EXTENSION__ 이거는 배포할때는 거의 뺀다 redux가 어떻게 돌아가는지 노출되어버림\r\n        !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : f => f,\r\n      );\r\n    const store = createStore(reducer, initialState, enhancer);\r\n    store.sagaTask = sagaMiddleware.run(rootSaga);\r\n    // 이 부분은 별로 바뀔 일이 없다 연결하는 부분!\r\n    return store;\r\n  };\r\n\r\nexport default withRedux(configureStore)(withReduxSaga(NodeBird));"]},"metadata":{},"sourceType":"module"}