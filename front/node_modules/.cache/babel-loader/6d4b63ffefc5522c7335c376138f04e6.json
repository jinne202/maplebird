{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport produce from 'immer'; // 유저 정보들만 담고 있는 sotre 안에 초기값을 넣어준다. 이게 초기 state\n// const dummyUser = {\n//     id : 1,\n//     nickname : 'JINNE',\n//     Post : [],\n//     Followings : [],\n//     Followers : [],\n// }\n// 유저 정보들만 담고 있는 sotre 안에 초기값을 넣어준다.\n\nexport var initialState = {\n  isLoggingOut: false,\n  //로그아웃 시도중\n  isLoggingIn: false,\n  //로그인 시도중\n  logInErrorReason: '',\n  //로그인 에러 사유\n  isSignedUp: false,\n  //회원가입 성공\n  isSigningUp: false,\n  //회원가입 시도중\n  signUpErrorReason: '',\n  //회원가입 실패 사유\n  me: null,\n  //내 정보\n  followingList: [],\n  //팔로잉 리스트\n  followerList: [],\n  //팔로워 리스트\n  userInfo: null,\n  //남의 정보\n  isEditingNickname: false,\n  // 닉네임 변경중\n  editNicknameErrorReason: '',\n  hasMoreFollower: false,\n  hasMoreFollowing: false\n}; // 여기까지 store\n\nexport var SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\nexport var SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\nexport var SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\nexport var LOG_IN_REQUEST = 'LOG_IN_REQUEST'; //액션의 이름\n\nexport var LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\nexport var LOG_IN_FAILURE = 'LOG_IN_FAILURE';\nexport var LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\nexport var LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\nexport var LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\nexport var LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\nexport var LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\nexport var LOG_OUT_FAILURE = 'LOG_OUT_FAILURE'; // 팔로워, 팔로잉 목록 불러오기\n\nexport var LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\nexport var LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\nexport var LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\nexport var LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\nexport var LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\nexport var LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE'; // 팔로우 하는 액션\n\nexport var FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\nexport var FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\nexport var FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\nexport var UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\nexport var UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\nexport var UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\nexport var REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\nexport var REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\nexport var REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\nexport var EDIT_NICKNAME_REQUEST = 'EDIT_NICKNAME_REQUEST';\nexport var EDIT_NICKNAME_SUCCESS = 'EDIT_NICKNAME_SUCCESS';\nexport var EDIT_NICKNAME_FAILURE = 'EDIT_NICKNAME_FAILURE'; // 중요한 액션!!!!! 리듀서의 단점때문에 만들어진 액션\n\nexport var ADD_POST_TO_ME = 'ADD_POST_TO_ME';\nexport var REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME'; // // 실제 액션\n// export const loginRequestAction = {\n//     type : LOG_IN_REQUEST,\n// };\n// export const logoutAction = {\n//     type : LOG_OUT_REQUEST,\n// }\n\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case LOG_IN_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: true,\n          logInErrorReason: ''\n        });\n      }\n\n    case LOG_IN_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          me: action.data,\n          isLoading: false\n        });\n      }\n\n    case LOG_IN_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isLoggingIn: false,\n          logInErrorReason: action.error,\n          me: null\n        });\n      }\n\n    case LOG_OUT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: true\n        });\n      }\n\n    case LOG_OUT_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isLoggingOut: false,\n          me: null\n        });\n      }\n\n    case SIGN_UP_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: true,\n          isSignedUp: false,\n          signUpErrorReason: ''\n        });\n      }\n\n    case SIGN_UP_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          isSignedUp: true\n        });\n      }\n\n    case SIGN_UP_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isSigningUp: false,\n          signUpErrorReason: action.error\n        });\n      }\n\n    case LOAD_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_USER_SUCCESS:\n      {\n        if (action.me) {\n          return _objectSpread({}, state, {\n            me: action.data\n          });\n        }\n\n        return _objectSpread({}, state, {\n          userInfo: action.data\n        });\n      }\n\n    case LOAD_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case FOLLOW_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case FOLLOW_USER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Followings: [{\n              id: action.data\n            }].concat(_toConsumableArray(state.me.Followings))\n          })\n        });\n      }\n\n    case FOLLOW_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNFOLLOW_USER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNFOLLOW_USER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Followings: state.me.Followings.filter(function (v) {\n              return v.id !== action.data;\n            })\n          }),\n          followingList: state.followingList.filter(function (v) {\n            return v.id !== action.data;\n          })\n        });\n      }\n\n    case UNFOLLOW_USER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case ADD_POST_TO_ME:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Posts: [{\n              id: action.data\n            }].concat(_toConsumableArray(state.me.Posts))\n          })\n        });\n      }\n\n    case REMOVE_POST_OF_ME:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Posts: state.me.Posts.filter(function (v) {\n              return v.id !== action.data;\n            })\n          })\n        });\n      }\n\n    case LOAD_FOLLOWERS_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          followerList: !action.offset ? [] : state.followerList,\n          hasMoreFollower: action.offset ? state.hasMoreFollower : true\n        });\n      }\n\n    case LOAD_FOLLOWERS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          followerList: state.followerList.concat(action.data),\n          hasMoreFollower: action.data.length === 3\n        });\n      }\n\n    case LOAD_FOLLOWERS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_FOLLOWINGS_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          followingList: !action.offset ? [] : state.followingList,\n          hasMoreFollowing: action.offset ? state.hasMoreFollowing : true\n        });\n      }\n\n    case LOAD_FOLLOWINGS_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          followingList: state.followingList.concat(action.data),\n          hasMoreFollowing: action.data.length === 3\n        });\n      }\n\n    case LOAD_FOLLOWINGS_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_FOLLOWER_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_FOLLOWER_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          me: _objectSpread({}, state.me, {\n            Followers: state.me.Followers.filter(function (v) {\n              return v.id !== action.data;\n            })\n          }),\n          followerList: state.followerList.filter(function (v) {\n            return v.id !== action.data;\n          })\n        });\n      }\n\n    case REMOVE_FOLLOWER_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case EDIT_NICKNAME_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isEditingNickname: true,\n          editNicknameErrorReason: ''\n        });\n      }\n\n    case EDIT_NICKNAME_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isEditingNickname: false,\n          me: _objectSpread({}, state.me, {\n            nickname: action.data\n          })\n        });\n      }\n\n    case EDIT_NICKNAME_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isEditingNickname: false,\n          editNicknameErrorReason: action.error\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:/project/nodebird/front/reducers/user.js"],"names":["produce","initialState","isLoggingOut","isLoggingIn","logInErrorReason","isSignedUp","isSigningUp","signUpErrorReason","me","followingList","followerList","userInfo","isEditingNickname","editNicknameErrorReason","hasMoreFollower","hasMoreFollowing","SIGN_UP_REQUEST","SIGN_UP_SUCCESS","SIGN_UP_FAILURE","LOG_IN_REQUEST","LOG_IN_SUCCESS","LOG_IN_FAILURE","LOAD_USER_REQUEST","LOAD_USER_SUCCESS","LOAD_USER_FAILURE","LOG_OUT_REQUEST","LOG_OUT_SUCCESS","LOG_OUT_FAILURE","LOAD_FOLLOWERS_REQUEST","LOAD_FOLLOWERS_SUCCESS","LOAD_FOLLOWERS_FAILURE","LOAD_FOLLOWINGS_REQUEST","LOAD_FOLLOWINGS_SUCCESS","LOAD_FOLLOWINGS_FAILURE","FOLLOW_USER_REQUEST","FOLLOW_USER_SUCCESS","FOLLOW_USER_FAILURE","UNFOLLOW_USER_REQUEST","UNFOLLOW_USER_SUCCESS","UNFOLLOW_USER_FAILURE","REMOVE_FOLLOWER_REQUEST","REMOVE_FOLLOWER_SUCCESS","REMOVE_FOLLOWER_FAILURE","EDIT_NICKNAME_REQUEST","EDIT_NICKNAME_SUCCESS","EDIT_NICKNAME_FAILURE","ADD_POST_TO_ME","REMOVE_POST_OF_ME","state","action","type","data","isLoading","error","Followings","id","filter","v","Posts","offset","concat","length","Followers","nickname"],"mappings":"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","sourcesContent":["import produce from 'immer';\r\n\r\n// 유저 정보들만 담고 있는 sotre 안에 초기값을 넣어준다. 이게 초기 state\r\n\r\n// const dummyUser = {\r\n//     id : 1,\r\n//     nickname : 'JINNE',\r\n//     Post : [],\r\n//     Followings : [],\r\n//     Followers : [],\r\n// }\r\n\r\n// 유저 정보들만 담고 있는 sotre 안에 초기값을 넣어준다.\r\nexport const initialState = {\r\n    isLoggingOut : false, //로그아웃 시도중\r\n    isLoggingIn : false, //로그인 시도중\r\n    logInErrorReason : '', //로그인 에러 사유\r\n    isSignedUp : false, //회원가입 성공\r\n    isSigningUp : false, //회원가입 시도중\r\n    signUpErrorReason : '', //회원가입 실패 사유\r\n    me : null, //내 정보\r\n    followingList : [], //팔로잉 리스트\r\n    followerList : [], //팔로워 리스트\r\n    userInfo : null, //남의 정보\r\n    isEditingNickname : false, // 닉네임 변경중\r\n    editNicknameErrorReason : '',\r\n    hasMoreFollower : false,\r\n    hasMoreFollowing : false,\r\n};\r\n// 여기까지 store\r\n\r\nexport const SIGN_UP_REQUEST = 'SIGN_UP_REQUEST';\r\nexport const SIGN_UP_SUCCESS = 'SIGN_UP_SUCCESS';\r\nexport const SIGN_UP_FAILURE = 'SIGN_UP_FAILURE';\r\n\r\nexport const LOG_IN_REQUEST = 'LOG_IN_REQUEST'; //액션의 이름\r\nexport const LOG_IN_SUCCESS = 'LOG_IN_SUCCESS';\r\nexport const LOG_IN_FAILURE = 'LOG_IN_FAILURE';\r\n\r\nexport const LOAD_USER_REQUEST = 'LOAD_USER_REQUEST';\r\nexport const LOAD_USER_SUCCESS = 'LOAD_USER_SUCCESS';\r\nexport const LOAD_USER_FAILURE = 'LOAD_USER_FAILURE';\r\n\r\nexport const LOG_OUT_REQUEST = 'LOG_OUT_REQUEST';\r\nexport const LOG_OUT_SUCCESS = 'LOG_OUT_SUCCESS';\r\nexport const LOG_OUT_FAILURE = 'LOG_OUT_FAILURE';\r\n\r\n// 팔로워, 팔로잉 목록 불러오기\r\nexport const LOAD_FOLLOWERS_REQUEST = 'LOAD_FOLLOWERS_REQUEST';\r\nexport const LOAD_FOLLOWERS_SUCCESS = 'LOAD_FOLLOWERS_SUCCESS';\r\nexport const LOAD_FOLLOWERS_FAILURE = 'LOAD_FOLLOWERS_FAILURE';\r\n\r\nexport const LOAD_FOLLOWINGS_REQUEST = 'LOAD_FOLLOWINGS_REQUEST';\r\nexport const LOAD_FOLLOWINGS_SUCCESS = 'LOAD_FOLLOWINGS_SUCCESS';\r\nexport const LOAD_FOLLOWINGS_FAILURE = 'LOAD_FOLLOWINGS_FAILURE';\r\n\r\n// 팔로우 하는 액션\r\nexport const FOLLOW_USER_REQUEST = 'FOLLOW_USER_REQUEST';\r\nexport const FOLLOW_USER_SUCCESS = 'FOLLOW_USER_SUCCESS';\r\nexport const FOLLOW_USER_FAILURE = 'FOLLOW_USER_FAILURE';\r\n\r\nexport const UNFOLLOW_USER_REQUEST = 'UNFOLLOW_USER_REQUEST';\r\nexport const UNFOLLOW_USER_SUCCESS = 'UNFOLLOW_USER_SUCCESS';\r\nexport const UNFOLLOW_USER_FAILURE = 'UNFOLLOW_USER_FAILURE';\r\n\r\nexport const REMOVE_FOLLOWER_REQUEST = 'REMOVE_FOLLOWER_REQUEST';\r\nexport const REMOVE_FOLLOWER_SUCCESS = 'REMOVE_FOLLOWER_SUCCESS';\r\nexport const REMOVE_FOLLOWER_FAILURE = 'REMOVE_FOLLOWER_FAILURE';\r\n\r\nexport const EDIT_NICKNAME_REQUEST = 'EDIT_NICKNAME_REQUEST';\r\nexport const EDIT_NICKNAME_SUCCESS = 'EDIT_NICKNAME_SUCCESS';\r\nexport const EDIT_NICKNAME_FAILURE = 'EDIT_NICKNAME_FAILURE';\r\n\r\n// 중요한 액션!!!!! 리듀서의 단점때문에 만들어진 액션\r\nexport const ADD_POST_TO_ME = 'ADD_POST_TO_ME';\r\nexport const REMOVE_POST_OF_ME = 'REMOVE_POST_OF_ME';\r\n\r\n// // 실제 액션\r\n// export const loginRequestAction = {\r\n//     type : LOG_IN_REQUEST,\r\n// };\r\n\r\n// export const logoutAction = {\r\n//     type : LOG_OUT_REQUEST,\r\n// }\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type) {\r\n        case LOG_IN_REQUEST : {\r\n            return {\r\n                ...state,\r\n                isLoggingIn: true,\r\n                logInErrorReason: '',\r\n            };\r\n        }\r\n        case LOG_IN_SUCCESS : {\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                me: action.data,\r\n                isLoading: false,\r\n            };\r\n        }\r\n        case LOG_IN_FAILURE : {\r\n            return {\r\n                ...state,\r\n                isLoggingIn: false,\r\n                logInErrorReason: action.error,\r\n                me: null,\r\n            };\r\n        }\r\n        case LOG_OUT_REQUEST : {\r\n            return {\r\n                ...state,\r\n                isLoggingOut: true,\r\n            };\r\n        }\r\n        case LOG_OUT_SUCCESS : {\r\n            return {\r\n                ...state,\r\n                isLoggingOut: false,\r\n                me: null,\r\n            };\r\n        }\r\n        case SIGN_UP_REQUEST : {\r\n            return {\r\n                ...state,\r\n                isSigningUp: true,\r\n                isSignedUp: false,\r\n                signUpErrorReason: '',\r\n            };\r\n        }\r\n        case SIGN_UP_SUCCESS : {\r\n            return {\r\n                ...state,\r\n                isSigningUp: false,\r\n                isSignedUp: true,\r\n            };\r\n        }\r\n        case SIGN_UP_FAILURE : {\r\n            return {\r\n                ...state,\r\n                isSigningUp: false,\r\n                signUpErrorReason: action.error,\r\n            };\r\n        }\r\n        case LOAD_USER_REQUEST : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case LOAD_USER_SUCCESS : {\r\n            if (action.me) {\r\n                return {\r\n                  ...state,\r\n                  me: action.data,\r\n                };\r\n            }\r\n            return {\r\n                ...state,\r\n                userInfo: action.data,\r\n            };\r\n        }\r\n        case LOAD_USER_FAILURE : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case FOLLOW_USER_REQUEST : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case FOLLOW_USER_SUCCESS : {\r\n            return {\r\n                ...state,\r\n                me: {\r\n                  ...state.me,\r\n                  Followings: [{ id: action.data }, ...state.me.Followings],\r\n                },\r\n            };\r\n        }\r\n        case FOLLOW_USER_FAILURE : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case UNFOLLOW_USER_REQUEST : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case UNFOLLOW_USER_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                me: {\r\n                  ...state.me,\r\n                  Followings: state.me.Followings.filter(v => v.id !== action.data),\r\n                },\r\n                followingList: state.followingList.filter(v => v.id !== action.data),\r\n            };\r\n        }\r\n        case UNFOLLOW_USER_FAILURE : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case ADD_POST_TO_ME : {\r\n            return {\r\n                ...state,\r\n                me: {\r\n                  ...state.me,\r\n                  Posts: [{ id: action.data }, ...state.me.Posts],\r\n                },\r\n            };\r\n        }\r\n        case REMOVE_POST_OF_ME : {\r\n            return {\r\n                ...state,\r\n                me : {\r\n                    ...state.me,\r\n                    Posts : state.me.Posts.filter(v => v.id !== action.data),\r\n                }\r\n            }\r\n        }\r\n        case LOAD_FOLLOWERS_REQUEST : {\r\n            return {\r\n                ...state,\r\n                followerList : !action.offset ? [] : state.followerList,\r\n                hasMoreFollower : action.offset ? state.hasMoreFollower : true,\r\n            }\r\n        }\r\n        case LOAD_FOLLOWERS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                followerList : state.followerList.concat(action.data),\r\n                hasMoreFollower : action.data.length === 3,\r\n            }\r\n        }\r\n        case LOAD_FOLLOWERS_FAILURE : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case LOAD_FOLLOWINGS_REQUEST : {\r\n            return {\r\n                ...state,\r\n                followingList : !action.offset ? [] : state.followingList,\r\n                hasMoreFollowing : action.offset ? state.hasMoreFollowing : true,\r\n            }\r\n        }\r\n        case LOAD_FOLLOWINGS_SUCCESS: {\r\n            return {\r\n                ...state,\r\n                followingList : state.followingList.concat(action.data),\r\n                hasMoreFollowing : action.data.length === 3,\r\n            }\r\n        }\r\n        case LOAD_FOLLOWINGS_FAILURE : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case REMOVE_FOLLOWER_REQUEST : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case REMOVE_FOLLOWER_SUCCESS : {\r\n            return {\r\n                ...state,\r\n                me : {\r\n                    ...state.me,\r\n                    Followers : state.me.Followers.filter(v => v.id !== action.data),\r\n                },\r\n                followerList : state.followerList.filter(v => v.id !== action.data),\r\n            };\r\n        }\r\n        case REMOVE_FOLLOWER_FAILURE : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case EDIT_NICKNAME_REQUEST : {\r\n            return {\r\n                ...state,\r\n                isEditingNickname: true,\r\n                editNicknameErrorReason: '',\r\n            };\r\n        }\r\n        case EDIT_NICKNAME_SUCCESS : {\r\n            return {\r\n                ...state,\r\n                isEditingNickname: false,\r\n                me: {\r\n                  ...state.me,\r\n                  nickname: action.data,\r\n                },\r\n            };\r\n        }\r\n        case EDIT_NICKNAME_FAILURE : {\r\n            return {\r\n                ...state,\r\n                isEditingNickname: false,\r\n                editNicknameErrorReason: action.error,\r\n            };\r\n        }\r\n        default : {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n    }\r\n};"]},"metadata":{},"sourceType":"module"}