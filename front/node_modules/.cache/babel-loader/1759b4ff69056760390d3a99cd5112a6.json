{"ast":null,"code":"// export const initialState = {\n//     mainPosts : [],\n//     imagePaths : [],\n//     addPostErrorReason : false , //포스트 업로드 실패 사유\n//     isAddingPost : false, //포스트 업로드 중\n//     postAdded : false, //포스트 업로드 성공\n//     isAddingComment : false,\n//     addCommentErrorReason : '',\n//     commentAdded : false,\n//     hasMorePost : false,\n//     singlePost : null,\n// };\n// export const LOAD_MAIN_POST_REQUEST = 'LOAD_MAIN_POST_REQUEST';\n// export const LOAD_MAIN_POST_SUCCESS = 'LOAD_MAIN_POST_SUCCESS';\n// export const LOAD_MAIN_POST_FAILURE = 'LOAD_MAIN_POST_FAILURE';\n// export const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\n// export const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\n// export const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\n// export const LOAD_USER_POST_REQUEST = 'LOAD_USER_POST_REQUEST';\n// export const LOAD_USER_POST_SUCCESS = 'LOAD_USER_POST_SUCCESS';\n// export const LOAD_USER_POST_FAILURE = 'LOAD_USER_POST_FAILURE';\n// export const UPLOAD_IMAGE_REQUEST = 'UPLOAD_IMAGE_REQUEST';\n// export const UPLOAD_IMAGE_SUCCESS = 'UPLOAD_IMAGE_SUCCESS';\n// export const UPLOAD_IMAGE_FAILURE = 'UPLOAD_IMAGE_FAILURE';\n// export const REMOVE_IMAGE = 'REMOVE_IMAGE'\n// export const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\n// export const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\n// export const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\n// export const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\n// export const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\n// export const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\n// export const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\n// export const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\n// export const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\n// export const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\n// export const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\n// export const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\n// export const LOAD_COMMENT_REQUEST = 'LOAD_COMMENT_REQUEST';\n// export const LOAD_COMMENT_SUCCESS = 'LOAD_COMMENT_SUCCESS';\n// export const LOAD_COMMENT_FAILURE = 'LOAD_COMMENT_FAILURE';\n// export const RETWEET_REQUEST = 'RETWEET_REQUEST';\n// export const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\n// export const RETWEET_FAILURE = 'RETWEET_FAILURE';\n// export const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\n// export const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\n// export const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\n// export const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\n// export const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\n// export const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\n// export const REMOVE_COMMENT_REQUEST = 'REMOVE_COMMENT_REQUEST';\n// export const REMOVE_COMMENT_SUCCESS = 'REMOVE_COMMENT_SUCCESS';\n// export const REMOVE_COMMENT_FAILURE = 'REMOVE_COMMENT_FAILURE';\n// export default (state = initialState, action) => {\n//     switch (action.type){\n//         case ADD_POST_REQUEST : {\n//             return {\n//                 ...state,\n//                 isAddingPost: true,\n//                 addPostErrorReason: '',\n//                 postAdded: false,\n//             };\n//         }\n//         case ADD_POST_SUCCESS : {\n//             return {\n//                 ...state,\n//                 isAddingPost: false,\n//                 mainPosts: [action.data, ...state.mainPosts],\n//                 postAdded: true,\n//                 imagePaths: [],\n//             };\n//         }\n//         case ADD_POST_FAILURE : {\n//             return {\n//                 ...state,\n//                 isAddingPost: false,\n//                 addPostErrorReason: action.error,\n//             };\n//         }\n//         case ADD_COMMENT_REQUEST : {\n//             return {\n//                 ...state,\n//                 isAddingComment: true,\n//                 addCommentErrorReason: '',\n//                 commentAdded: false,\n//             };\n//         }\n//         case ADD_COMMENT_SUCCESS : {\n//             const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n//             const post = state.mainPosts[postIndex];\n//             const Comments = [...post.Comments, action.data.comment];\n//             const mainPosts = [...state.mainPosts];\n//             mainPosts[postIndex] = { ...post, Comments };\n//             return {\n//                 ...state,\n//                 isAddingComment: false,\n//                 mainPosts,\n//                 commentAdded: true,\n//                 // 오류 구간\n//                 singlePost : {\n//                     ...state.singlePost,\n//                     Comments : [...state.singlePost.Comments, action.data.comment],\n//                 }\n//                 //\n//             };\n//         }\n//         case ADD_COMMENT_FAILURE : {\n//             return {\n//                 ...state,\n//                 isAddingComment: false,\n//                 addCommentErrorReason: action.error,\n//             };\n//         }\n//         case LOAD_COMMENT_SUCCESS : {\n//             const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n//             const post = state.mainPosts[postIndex];\n//             const Comments = action.data.comments;\n//             const mainPosts = [...state.mainPosts];\n//             mainPosts[postIndex] = { ...post, Comments };\n//             return {\n//                 ...state,\n//                 mainPosts,\n//                 singlePost : {\n//                     ...state.singlePost,\n//                     Comments : action.data.comments,\n//                 }\n//             };\n//         }\n//         case LOAD_MAIN_POST_REQUEST :\n//         case LOAD_HASHTAG_POSTS_REQUEST :\n//         case LOAD_USER_POST_REQUEST : {\n//             return {\n//                 ...state,\n//                 mainPosts : !action.lastId ? [] : state.mainPosts,\n//                 hasMorePost : action.lastId ? state.hasMorePost : true,\n//             };\n//         }\n//         case LOAD_MAIN_POST_SUCCESS :\n//         case LOAD_HASHTAG_POSTS_SUCCESS :\n//         case LOAD_USER_POST_SUCCESS : {\n//             return {\n//                 ...state,\n//                 mainPosts : state.mainPosts.concat(action.data),\n//                 hasMorePost : action.data.length === 10,\n//             };\n//         }\n//         case LOAD_MAIN_POST_FAILURE :\n//         case LOAD_HASHTAG_POSTS_FAILURE :\n//         case LOAD_USER_POST_FAILURE : {\n//             return {\n//                 ...state,\n//             };\n//         }\n//         case UPLOAD_IMAGE_REQUEST : {\n//             return {\n//                 ...state,\n//             };\n//         }\n//         case UPLOAD_IMAGE_SUCCESS : {\n//             return {\n//                 ...state,\n//                 imagePaths: [...state.imagePaths, ...action.data],\n//             };\n//         }\n//         case UPLOAD_IMAGE_FAILURE : {\n//             return {\n//                 ...state,\n//             };\n//         }\n//         case REMOVE_IMAGE : {\n//             return {\n//                 ...state,\n//                 imagePaths: state.imagePaths.filter((v, i) => i !== action.index),\n//             };\n//         }\n//         case LIKE_POST_REQUEST : {\n//             return {\n//                 ...state,\n//             };\n//         }\n//         case LIKE_POST_SUCCESS : {\n//             const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n//             const post = state.mainPosts[postIndex];\n//             const Likers = [{ id: action.data.userId }, ...post.Likers];\n//             const mainPosts = [...state.mainPosts];\n//             mainPosts[postIndex] = { ...post, Likers };\n//             return {\n//                 ...state,\n//                 mainPosts,\n//                 singlePost : {\n//                     ...state.singlePost,\n//                     Likers : [{id : action.data.userId}, ...state.singlePost.Likers],\n//                 }\n//             };\n//         }\n//         case LIKE_POST_FAILURE : {\n//             return {\n//                 ...state,\n//             };\n//         }\n//         case UNLIKE_POST_REQUEST : {\n//             return {\n//                 ...state,\n//             };\n//         }\n//         case UNLIKE_POST_SUCCESS : {\n//             const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n//             const post = state.mainPosts[postIndex];\n//             const Likers = post.Likers.filter(v => v.id !== action.data.userId);\n//             const mainPosts = [...state.mainPosts];\n//             mainPosts[postIndex] = { ...post, Likers };\n//             return {\n//                 ...state,\n//                 mainPosts,\n//                 singlePost : {\n//                     ...state.singlePost,\n//                     Likers : state.singlePost.Likers.filter(v => v.id !== action.data.userId)\n//                 }\n//             };\n//         }\n//         case UNLIKE_POST_FAILURE : {\n//             return {\n//                 ...state,\n//             };\n//         }\n//         case RETWEET_REQUEST : {\n//             return {\n//                 ...state,\n//             };\n//         }\n//         case RETWEET_SUCCESS : {\n//             return {\n//                 ...state,\n//                 mainPosts: [action.data, ...state.mainPosts],\n//             };\n//         }\n//         case RETWEET_FAILURE : {\n//             return {\n//                 ...state,\n//             };\n//         }\n//         case REMOVE_POST_REQUEST : {\n//             return {\n//                 ...state,\n//             };\n//         }\n//         case REMOVE_POST_SUCCESS : {\n//             return {\n//                 ...state,\n//                 mainPosts : state.mainPosts.filter(v => v.id !== action.data)\n//             };\n//         }\n//         case REMOVE_POST_FAILURE : {\n//             return {\n//                 ...state,\n//             };\n//         }\n//         case REMOVE_COMMENT_REQUEST : {\n//             const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n//             console.log('postIndex', postIndex);\n//             return {\n//                 ...state,\n//             };\n//         }\n//         case REMOVE_COMMENT_SUCCESS : {\n//             const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\n//             const post = state.mainPosts[postIndex];\n//             const Comments = post.Comments.filter(v => v.id !== action.data.commentId);\n//             console.log('post',post)\n//             const mainPosts = [...state.mainPosts];\n//             mainPosts[postIndex] = {...post, Comments};\n//             return {\n//                 ...state,\n//                 mainPosts,\n//                 singlePost : {\n//                     ...state.singlePost,\n//                     Comments : state.singlePost.Comments.filter(v => v.id !== action.data.commentId)\n//                 }\n//             };\n//         }\n//         case REMOVE_COMMENT_FAILURE : {\n//             return {\n//                 ...state,\n//             }\n//         }\n//         case LOAD_POST_SUCCESS : {\n//             return {\n//                 ...state,\n//                 singlePost : action.data,\n//             }\n//         }\n//         default : {\n//             return {\n//                 ...state,\n//             };\n//         }\n//     }\n// };\nimport produce from 'immer';\nexport var initialState = {\n  mainPosts: [],\n  // 화면에 보일 포스트들\n  imagePaths: [],\n  // 미리보기 이미지 경로\n  addPostErrorReason: '',\n  // 포스트 업로드 실패 사유\n  isAddingPost: false,\n  // 포스트 업로드 중\n  postAdded: false,\n  // 포스트 업로드 성공\n  isAddingComment: false,\n  addCommentErrorReason: '',\n  commentAdded: false,\n  singlePost: null\n};\nexport var LOAD_MAIN_POST_REQUEST = 'LOAD_MAIN_POST_REQUEST';\nexport var LOAD_MAIN_POST_SUCCESS = 'LOAD_MAIN_POST_SUCCESS';\nexport var LOAD_MAIN_POST_FAILURE = 'LOAD_MAIN_POST_FAILURE';\nexport var LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport var LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport var LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport var LOAD_USER_POST_REQUEST = 'LOAD_USER_POST_REQUEST';\nexport var LOAD_USER_POST_SUCCESS = 'LOAD_USER_POST_SUCCESS';\nexport var LOAD_USER_POST_FAILURE = 'LOAD_USER_POST_FAILURE';\nexport var UPLOAD_IMAGE_REQUEST = 'UPLOAD_IMAGE_REQUEST';\nexport var UPLOAD_IMAGE_SUCCESS = 'UPLOAD_IMAGE_SUCCESS';\nexport var UPLOAD_IMAGE_FAILURE = 'UPLOAD_IMAGE_FAILURE';\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var LOAD_COMMENT_REQUEST = 'LOAD_COMMENT_REQUEST';\nexport var LOAD_COMMENT_SUCCESS = 'LOAD_COMMENT_SUCCESS';\nexport var LOAD_COMMENT_FAILURE = 'LOAD_COMMENT_FAILURE';\nexport var RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport var RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport var RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport var LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport var LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\nexport var REMOVE_COMMENT_REQUEST = 'REMOVE_COMMENT_REQUEST';\nexport var REMOVE_COMMENT_SUCCESS = 'REMOVE_COMMENT_SUCCESS';\nexport var REMOVE_COMMENT_FAILURE = 'REMOVE_COMMENT_FAILURE';\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n  return produce(state, function (draft) {\n    switch (action.type) {\n      case UPLOAD_IMAGE_REQUEST:\n        {\n          break;\n        }\n\n      case UPLOAD_IMAGE_SUCCESS:\n        {\n          action.data.forEach(function (p) {\n            draft.imagePaths.push(p);\n          });\n          break;\n        }\n\n      case UPLOAD_IMAGE_FAILURE:\n        {\n          break;\n        }\n\n      case REMOVE_IMAGE:\n        {\n          var index = draft.imagePaths.findIndex(function (v, i) {\n            return i === action.index;\n          });\n          draft.imagePaths.splice(index, 1);\n          break;\n        }\n\n      case ADD_POST_REQUEST:\n        {\n          draft.isAddingPost = true;\n          draft.addingPostErrorReason = '';\n          draft.postAdded = false;\n          break;\n        }\n\n      case ADD_POST_SUCCESS:\n        {\n          draft.isAddingPost = false;\n          draft.mainPosts.unshift(action.data);\n          draft.postAdded = true;\n          draft.imagePaths = [];\n          break;\n        }\n\n      case ADD_POST_FAILURE:\n        {\n          draft.isAddingPost = false;\n          draft.addPostErrorReason = action.error;\n          break;\n        }\n\n      case ADD_COMMENT_REQUEST:\n        {\n          draft.isAddingComment = true;\n          draft.addCommentErrorReason = '';\n          draft.commentAdded = false;\n          break;\n        }\n\n      case ADD_COMMENT_SUCCESS:\n        {\n          var postIndex = draft.mainPosts.findIndex(function (v) {\n            return v.id === action.data.postId;\n          });\n          draft.mainPosts[postIndex].Comments.push(action.data.comment);\n          draft.isAddingComment = false;\n          draft.commentAdded = true;\n          break;\n        }\n\n      case ADD_COMMENT_FAILURE:\n        {\n          draft.isAddingComment = false;\n          draft.addingPostErrorReason = action.error;\n          break;\n        }\n\n      case LOAD_COMMENT_SUCCESS:\n        {\n          var _postIndex = draft.mainPosts.findIndex(function (v) {\n            return v.id === action.data.postId;\n          });\n\n          draft.mainPosts[_postIndex].Comments = action.data.comments;\n          break;\n        }\n\n      case LOAD_MAIN_POST_REQUEST:\n      case LOAD_HASHTAG_POSTS_REQUEST:\n      case LOAD_USER_POST_REQUEST:\n        {\n          draft.mainPosts = !action.lastId ? [] : draft.mainPosts;\n          draft.hasMorePost = action.lastId ? draft.hasMorePost : true;\n          break;\n        }\n\n      case LOAD_MAIN_POST_SUCCESS:\n      case LOAD_HASHTAG_POSTS_SUCCESS:\n      case LOAD_USER_POSTS_SUCCESS:\n        {\n          action.data.forEach(function (d) {\n            draft.mainPosts.push(d);\n          });\n          draft.hasMorePost = action.data.length === 10;\n          break;\n        }\n\n      case LOAD_MAIN_POST_FAILURE:\n      case LOAD_HASHTAG_POSTS_FAILURE:\n      case LOAD_USER_POSTS_FAILURE:\n        {\n          break;\n        }\n\n      case LIKE_POST_REQUEST:\n        {\n          break;\n        }\n\n      case LIKE_POST_SUCCESS:\n        {\n          var _postIndex2 = draft.mainPosts.findIndex(function (v) {\n            return v.id === action.data.postId;\n          });\n\n          draft.mainPosts[_postIndex2].Likers.unshift({\n            id: action.data.userId\n          });\n\n          break;\n        }\n\n      case LIKE_POST_FAILURE:\n        {\n          break;\n        }\n\n      case UNLIKE_POST_REQUEST:\n        {\n          break;\n        }\n\n      case UNLIKE_POST_SUCCESS:\n        {\n          var _postIndex3 = draft.mainPosts.findIndex(function (v) {\n            return v.id === action.data.postId;\n          });\n\n          var likeIndex = draft.mainPosts[_postIndex3].Likers.findIndex(function (v) {\n            return v.id === action.data.userId;\n          });\n\n          draft.mainPosts[_postIndex3].Likers.splice(likeIndex, 1);\n\n          break;\n        }\n\n      case UNLIKE_POST_FAILURE:\n        {\n          break;\n        }\n\n      case RETWEET_REQUEST:\n        {\n          break;\n        }\n\n      case RETWEET_SUCCESS:\n        {\n          draft.mainPosts.unshift(action.data);\n          break;\n        }\n\n      case RETWEET_FAILURE:\n        {\n          break;\n        }\n\n      case REMOVE_POST_REQUEST:\n        {\n          break;\n        }\n\n      case REMOVE_POST_SUCCESS:\n        {\n          var _index = draft.mainPosts.findIndex(function (v) {\n            return v.id === action.data;\n          });\n\n          draft.mainPosts.splice(_index, 1);\n          break;\n        }\n\n      case REMOVE_POST_FAILURE:\n        {\n          break;\n        }\n\n      case LOAD_POST_SUCCESS:\n        {\n          draft.singlePost = action.data;\n          break;\n        }\n\n      default:\n        {\n          break;\n        }\n    }\n  });\n});","map":null,"metadata":{},"sourceType":"module"}