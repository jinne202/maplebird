{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState, useEffect, useCallback, memo } from 'react'; // import Head from 'next/head';\n// import AppLayout from '../components/AppLayout';\n\nimport { Form, Input, Checkbox, Button } from 'antd';\nimport PropTypes from 'prop-types';\nimport { SIGN_UP_REQUEST } from '../reducers/user';\nimport { useDispatch, useSelector } from 'react-redux';\nimport Router from 'next/router';\n\nvar TextInput = function TextInput(_ref) {\n  var value = _ref.value;\n  return (/*#__PURE__*/React.createElement(\"div\", null, value)\n  );\n};\n\nTextInput.propTypes = {\n  value: PropTypes.string\n}; // custom hook -!\n\nexport var useInput = function useInput() {\n  var initValue = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;\n\n  var _useState = useState(initValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setter = _useState2[1];\n\n  var handler = useCallback(function (e) {\n    setter(e.target.value);\n  }, []);\n  return [value, handler];\n}; // 커스텀 훅을 만들 수 있음. 중복되는 것들!\n\nvar SingUp = function SingUp() {\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      passwordCheck = _useState4[0],\n      setPasswordCheck = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      term = _useState6[0],\n      setTerm = _useState6[1];\n\n  var _useState7 = useState(''),\n      _useState8 = _slicedToArray(_useState7, 2),\n      passwordError = _useState8[0],\n      setPasswordError = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      termError = _useState10[0],\n      setTermError = _useState10[1]; // 커스텀 훅 적용\n\n\n  var _useInput = useInput(''),\n      _useInput2 = _slicedToArray(_useInput, 2),\n      id = _useInput2[0],\n      onChangeId = _useInput2[1];\n\n  var _useInput3 = useInput(''),\n      _useInput4 = _slicedToArray(_useInput3, 2),\n      nick = _useInput4[0],\n      onChangeNick = _useInput4[1];\n\n  var _useInput5 = useInput(''),\n      _useInput6 = _slicedToArray(_useInput5, 2),\n      password = _useInput6[0],\n      onChangePassword = _useInput6[1]; // 커스텀 훅 적용\n\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      isSigningUp = _useSelector.isSigningUp,\n      me = _useSelector.me;\n\n  useEffect(function () {\n    if (me) {\n      // 로그인 했으니 메인페이지로 이동\n      alert('로그인했으니 메인페이지로 이동합니다');\n      Router.push('/');\n    }\n  }, [me && me.id]);\n  var dispatch = useDispatch(); // FORM은 REACT의 USESTATE를 쓰고 REDUX에서는 최종본을 모아서 넣음! 이렇게 하면 STATE를 둘 다 쓰는 셈이 된다.\n\n  var onSubmit = useCallback(function (e) {\n    e.preventDefault();\n\n    if (password !== passwordCheck) {\n      return setPasswordError(true);\n    }\n\n    setTermError(!term);\n    dispatch({\n      type: SIGN_UP_REQUEST,\n      data: {\n        userId: id,\n        nickname: nick,\n        password: password\n      }\n    });\n  }, [id, nick, password, passwordCheck, term]);\n  var onChangePasswordCheck = useCallback(function (e) {\n    setPasswordError(e.target.value !== password);\n    setPasswordCheck(e.target.value);\n  }, [password]);\n  var onChangeTerm = useCallback(function (e) {\n    setTerm(e.target.checked);\n  }, []);\n  useEffect(function () {\n    term && setTermError(false);\n  }, [term]);\n\n  if (me) {\n    return null;\n  }\n\n  return (/*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(Form, {\n      onSubmit: onSubmit,\n      style: {\n        padding: 10\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"user-id\"\n    }, \"USER ID\"), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Input, {\n      name: \"user-id\",\n      value: id,\n      required: true,\n      onChange: onChangeId\n    })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"user-nick\"\n    }, \"USER Nickname\"), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Input, {\n      name: \"user-nick\",\n      value: nick,\n      required: true,\n      onChange: onChangeNick\n    })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"user-password\"\n    }, \"USER Password\"), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Input, {\n      name: \"user-password\",\n      type: \"password\",\n      value: password,\n      required: true,\n      onChange: onChangePassword\n    })), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"user-password-check\"\n    }, \"USER Password check\"), /*#__PURE__*/React.createElement(\"br\", null), /*#__PURE__*/React.createElement(Input, {\n      name: \"user-password-check\",\n      type: \"password\",\n      value: passwordCheck,\n      required: true,\n      onChange: onChangePasswordCheck\n    }), passwordError && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red'\n      }\n    }, \" \\uBE44\\uBC00\\uBC88\\uD638\\uAC00 \\uC77C\\uCE58\\uD558\\uC9C0 \\uC54A\\uC2B5\\uB2C8\\uB2E4 \")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 10\n      }\n    }, /*#__PURE__*/React.createElement(Checkbox, {\n      name: \"user-term\",\n      checked: term,\n      onChange: onChangeTerm\n    }, \"ok?\"), termError && /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        color: 'red'\n      }\n    }, \"\\uC57D\\uAD00\\uC5D0 \\uB3D9\\uC758\\uD558\\uC154\\uC57C \\uD569\\uB2C8\\uB2E4\")), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        marginTop: 10\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      loading: isSigningUp\n    }, \"SIGN UP\"))))\n  );\n};\n\nexport default SingUp;","map":{"version":3,"sources":["C:/project/nodebird/front/pages/signup.js"],"names":["React","useState","useEffect","useCallback","memo","Form","Input","Checkbox","Button","PropTypes","SIGN_UP_REQUEST","useDispatch","useSelector","Router","TextInput","value","propTypes","string","useInput","initValue","setter","handler","e","target","SingUp","passwordCheck","setPasswordCheck","term","setTerm","passwordError","setPasswordError","termError","setTermError","id","onChangeId","nick","onChangeNick","password","onChangePassword","state","user","isSigningUp","me","alert","push","dispatch","onSubmit","preventDefault","type","data","userId","nickname","onChangePasswordCheck","onChangeTerm","checked","padding","color","marginTop"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,WAArC,EAAkDC,IAAlD,QAA8D,OAA9D,C,CACA;AACA;;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,QAAtB,EAAgCC,MAAhC,QAA8C,MAA9C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,eAAT,QAAgC,kBAAhC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,MAAP,MAAmB,aAAnB;;AAEA,IAAMC,SAAS,GAAG,SAAZA,SAAY;AAAA,MAAGC,KAAH,QAAGA,KAAH;AAAA,uBACd,iCAAMA,KAAN;AADc;AAAA,CAAlB;;AAIAD,SAAS,CAACE,SAAV,GAAsB;AAClBD,EAAAA,KAAK,EAAEN,SAAS,CAACQ;AADC,CAAtB,C,CAIA;;AACA,OAAO,IAAMC,QAAQ,GAAG,SAAXA,QAAW,GAAsB;AAAA,MAArBC,SAAqB,uEAAT,IAAS;;AAAA,kBAClBlB,QAAQ,CAACkB,SAAD,CADU;AAAA;AAAA,MACnCJ,KADmC;AAAA,MAC5BK,MAD4B;;AAE1C,MAAMC,OAAO,GAAGlB,WAAW,CAAC,UAACmB,CAAD,EAAO;AAC/BF,IAAAA,MAAM,CAACE,CAAC,CAACC,MAAF,CAASR,KAAV,CAAN;AACH,GAF0B,EAExB,EAFwB,CAA3B;AAGA,SAAO,CAACA,KAAD,EAAQM,OAAR,CAAP;AACH,CANM,C,CAOP;;AAEA,IAAMG,MAAM,GAAG,SAATA,MAAS,GAAM;AAAA,mBACyBvB,QAAQ,CAAC,EAAD,CADjC;AAAA;AAAA,MACVwB,aADU;AAAA,MACKC,gBADL;;AAAA,mBAEOzB,QAAQ,CAAC,KAAD,CAFf;AAAA;AAAA,MAEV0B,IAFU;AAAA,MAEJC,OAFI;;AAAA,mBAGyB3B,QAAQ,CAAC,EAAD,CAHjC;AAAA;AAAA,MAGV4B,aAHU;AAAA,MAGKC,gBAHL;;AAAA,mBAIiB7B,QAAQ,CAAC,EAAD,CAJzB;AAAA;AAAA,MAIV8B,SAJU;AAAA,MAICC,YAJD,mBAKjB;;;AALiB,kBAMQd,QAAQ,CAAC,EAAD,CANhB;AAAA;AAAA,MAMVe,EANU;AAAA,MAMNC,UANM;;AAAA,mBAOYhB,QAAQ,CAAC,EAAD,CAPpB;AAAA;AAAA,MAOViB,IAPU;AAAA,MAOJC,YAPI;;AAAA,mBAQoBlB,QAAQ,CAAC,EAAD,CAR5B;AAAA;AAAA,MAQVmB,QARU;AAAA,MAQAC,gBARA,kBASjB;;;AATiB,qBAWW1B,WAAW,CAAC,UAAA2B,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAXtB;AAAA,MAWTC,WAXS,gBAWTA,WAXS;AAAA,MAWIC,EAXJ,gBAWIA,EAXJ;;AAajBxC,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIwC,EAAJ,EAAQ;AACJ;AACAC,MAAAA,KAAK,CAAC,qBAAD,CAAL;AACA9B,MAAAA,MAAM,CAAC+B,IAAP,CAAY,GAAZ;AACH;AACJ,GANQ,EAMN,CAACF,EAAE,IAAIA,EAAE,CAACT,EAAV,CANM,CAAT;AAQA,MAAMY,QAAQ,GAAGlC,WAAW,EAA5B,CArBiB,CAsBjB;;AAEA,MAAMmC,QAAQ,GAAG3C,WAAW,CAAC,UAACmB,CAAD,EAAO;AAChCA,IAAAA,CAAC,CAACyB,cAAF;;AACA,QAAGV,QAAQ,KAAKZ,aAAhB,EAA8B;AAC1B,aAAOK,gBAAgB,CAAC,IAAD,CAAvB;AACH;;AACDE,IAAAA,YAAY,CAAC,CAACL,IAAF,CAAZ;AACAkB,IAAAA,QAAQ,CAAC;AACLG,MAAAA,IAAI,EAAGtC,eADF;AAELuC,MAAAA,IAAI,EAAG;AACHC,QAAAA,MAAM,EAAGjB,EADN;AAEHkB,QAAAA,QAAQ,EAAGhB,IAFR;AAGHE,QAAAA,QAAQ,EAARA;AAHG;AAFF,KAAD,CAAR;AAQH,GAd2B,EAczB,CAACJ,EAAD,EAAKE,IAAL,EAAWE,QAAX,EAAqBZ,aAArB,EAAoCE,IAApC,CAdyB,CAA5B;AAgBA,MAAMyB,qBAAqB,GAAGjD,WAAW,CAAC,UAACmB,CAAD,EAAO;AAC7CQ,IAAAA,gBAAgB,CAACR,CAAC,CAACC,MAAF,CAASR,KAAT,KAAmBsB,QAApB,CAAhB;AACAX,IAAAA,gBAAgB,CAACJ,CAAC,CAACC,MAAF,CAASR,KAAV,CAAhB;AACH,GAHwC,EAGtC,CAACsB,QAAD,CAHsC,CAAzC;AAKA,MAAMgB,YAAY,GAAGlD,WAAW,CAAC,UAACmB,CAAD,EAAO;AACpCM,IAAAA,OAAO,CAACN,CAAC,CAACC,MAAF,CAAS+B,OAAV,CAAP;AACH,GAF+B,EAE7B,EAF6B,CAAhC;AAIApD,EAAAA,SAAS,CAAC,YAAM;AACZyB,IAAAA,IAAI,IAAIK,YAAY,CAAC,KAAD,CAApB;AACH,GAFQ,EAEN,CAACL,IAAD,CAFM,CAAT;;AAIA,MAAIe,EAAJ,EAAQ;AACJ,WAAO,IAAP;AACH;;AAED,uBACI,uDACI,oBAAC,IAAD;AAAM,MAAA,QAAQ,EAAII,QAAlB;AAA4B,MAAA,KAAK,EAAE;AAACS,QAAAA,OAAO,EAAG;AAAX;AAAnC,oBACI,8CACI;AAAO,MAAA,OAAO,EAAC;AAAf,iBADJ,eAEI,+BAFJ,eAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,SAAZ;AAAsB,MAAA,KAAK,EAAEtB,EAA7B;AAAiC,MAAA,QAAQ,MAAzC;AAA0C,MAAA,QAAQ,EAAEC;AAApD,MAHJ,CADJ,eAMI,8CACI;AAAO,MAAA,OAAO,EAAC;AAAf,uBADJ,eAEI,+BAFJ,eAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,WAAZ;AAAwB,MAAA,KAAK,EAAEC,IAA/B;AAAqC,MAAA,QAAQ,MAA7C;AAA8C,MAAA,QAAQ,EAAEC;AAAxD,MAHJ,CANJ,eAWI,8CACI;AAAO,MAAA,OAAO,EAAC;AAAf,uBADJ,eAEI,+BAFJ,eAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,eAAZ;AAA4B,MAAA,IAAI,EAAC,UAAjC;AAA4C,MAAA,KAAK,EAAEC,QAAnD;AAA6D,MAAA,QAAQ,MAArE;AAAsE,MAAA,QAAQ,EAAIC;AAAlF,MAHJ,CAXJ,eAgBI,8CACI;AAAO,MAAA,OAAO,EAAC;AAAf,6BADJ,eAEI,+BAFJ,eAGI,oBAAC,KAAD;AAAO,MAAA,IAAI,EAAC,qBAAZ;AAAkC,MAAA,IAAI,EAAC,UAAvC;AAAmD,MAAA,KAAK,EAAEb,aAA1D;AAAyE,MAAA,QAAQ,MAAjF;AAAkF,MAAA,QAAQ,EAAI2B;AAA9F,MAHJ,EAIKvB,aAAa,iBAAI;AAAK,MAAA,KAAK,EAAE;AAAC2B,QAAAA,KAAK,EAAG;AAAT;AAAZ,4FAJtB,CAhBJ,eAsBI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAG;AAAb;AAAZ,oBACI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,WAAf;AAA2B,MAAA,OAAO,EAAE9B,IAApC;AAA0C,MAAA,QAAQ,EAAE0B;AAApD,aADJ,EAEKtB,SAAS,iBAAI;AAAK,MAAA,KAAK,EAAE;AAACyB,QAAAA,KAAK,EAAG;AAAT;AAAZ,8EAFlB,CAtBJ,eA0BI;AAAK,MAAA,KAAK,EAAE;AAACC,QAAAA,SAAS,EAAG;AAAb;AAAZ,oBACI,oBAAC,MAAD;AAAQ,MAAA,IAAI,EAAC,SAAb;AAAuB,MAAA,QAAQ,EAAC,QAAhC;AAAyC,MAAA,OAAO,EAAIhB;AAApD,iBADJ,CA1BJ,CADJ;AADJ;AAmCH,CA5FD;;AA8FA,eAAejB,MAAf","sourcesContent":["import React, { useState, useEffect, useCallback, memo } from 'react';\r\n// import Head from 'next/head';\r\n// import AppLayout from '../components/AppLayout';\r\nimport { Form, Input, Checkbox, Button } from 'antd'\r\nimport PropTypes from 'prop-types';\r\nimport { SIGN_UP_REQUEST } from '../reducers/user';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport Router from 'next/router';\r\n\r\nconst TextInput = ({ value }) => (\r\n    <div>{value}</div>\r\n);\r\n\r\nTextInput.propTypes = {\r\n    value: PropTypes.string,\r\n};\r\n\r\n// custom hook -!\r\nexport const useInput = (initValue = null) => {\r\n    const [value, setter] = useState(initValue);\r\n    const handler = useCallback((e) => {\r\n        setter(e.target.value);\r\n    }, []);\r\n    return [value, handler];\r\n};\r\n// 커스텀 훅을 만들 수 있음. 중복되는 것들!\r\n\r\nconst SingUp = () => {\r\n    const [passwordCheck, setPasswordCheck] = useState('');\r\n    const [term, setTerm] = useState(false);\r\n    const [passwordError, setPasswordError] = useState('');\r\n    const [termError, setTermError] = useState('');\r\n    // 커스텀 훅 적용\r\n    const [id, onChangeId] = useInput('');\r\n    const [nick, onChangeNick] = useInput('');\r\n    const [password, onChangePassword] = useInput('');\r\n    // 커스텀 훅 적용\r\n\r\n    const { isSigningUp, me } = useSelector(state => state.user)\r\n\r\n    useEffect(() => {\r\n        if (me) {\r\n            // 로그인 했으니 메인페이지로 이동\r\n            alert('로그인했으니 메인페이지로 이동합니다');\r\n            Router.push('/');\r\n        }\r\n    }, [me && me.id]);\r\n\r\n    const dispatch = useDispatch();\r\n    // FORM은 REACT의 USESTATE를 쓰고 REDUX에서는 최종본을 모아서 넣음! 이렇게 하면 STATE를 둘 다 쓰는 셈이 된다.\r\n\r\n    const onSubmit = useCallback((e) => {\r\n        e.preventDefault();\r\n        if(password !== passwordCheck){\r\n            return setPasswordError(true);\r\n        }\r\n        setTermError(!term);\r\n        dispatch({\r\n            type : SIGN_UP_REQUEST,\r\n            data : {\r\n                userId : id,\r\n                nickname : nick,\r\n                password\r\n            }\r\n        });\r\n    }, [id, nick, password, passwordCheck, term]);\r\n\r\n    const onChangePasswordCheck = useCallback((e) => {\r\n        setPasswordError(e.target.value !== password);\r\n        setPasswordCheck(e.target.value);\r\n    }, [password]);\r\n\r\n    const onChangeTerm = useCallback((e) => {\r\n        setTerm(e.target.checked);\r\n    }, []);\r\n\r\n    useEffect(() => {\r\n        term && setTermError(false);\r\n    }, [term]);\r\n\r\n    if (me) {\r\n        return null;\r\n    }\r\n\r\n    return(\r\n        <>\r\n            <Form onSubmit = {onSubmit} style={{padding : 10}}>\r\n                <div>\r\n                    <label htmlFor=\"user-id\">USER ID</label>\r\n                    <br/>\r\n                    <Input name=\"user-id\" value={id} required onChange={onChangeId}/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-nick\">USER Nickname</label>\r\n                    <br/>\r\n                    <Input name=\"user-nick\" value={nick} required onChange={onChangeNick}/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password\">USER Password</label>\r\n                    <br/>\r\n                    <Input name=\"user-password\" type=\"password\" value={password} required onChange = {onChangePassword}/>\r\n                </div>\r\n                <div>\r\n                    <label htmlFor=\"user-password-check\">USER Password check</label>\r\n                    <br/>\r\n                    <Input name=\"user-password-check\" type=\"password\"  value={passwordCheck} required onChange = {onChangePasswordCheck}/>\r\n                    {passwordError && <div style={{color : 'red'}}> 비밀번호가 일치하지 않습니다 </div>}\r\n                </div>\r\n                <div style={{marginTop : 10}}>\r\n                    <Checkbox name=\"user-term\" checked={term} onChange={onChangeTerm}>ok?</Checkbox>\r\n                    {termError && <div style={{color : 'red'}}>약관에 동의하셔야 합니다</div>}\r\n                </div>\r\n                <div style={{marginTop : 10}}>\r\n                    <Button type=\"primary\" htmlType=\"submit\" loading = {isSigningUp}\r\n                    >SIGN UP</Button>\r\n                </div>\r\n            </Form>\r\n        </>\r\n    );\r\n};\r\n\r\nexport default SingUp;"]},"metadata":{},"sourceType":"module"}