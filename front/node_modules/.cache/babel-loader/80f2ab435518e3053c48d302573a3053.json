{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState, useCallback, useEffect, useRef } from 'react';\nimport { Form, Input, Button } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_POST_REQUEST, UPLOAD_IMAGE_REQUEST, REMOVE_IMAGE } from '../reducers/post';\nimport { PostFormStyle, TwitBtn, ThumbImg } from './Style/ContainerStyle';\n\nvar PostForm = function PostForm() {\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      text = _useState2[0],\n      setText = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      imagePaths = _useSelector.imagePaths,\n      isAddingPost = _useSelector.isAddingPost,\n      postAdded = _useSelector.postAdded;\n\n  var imageInput = useRef();\n  useEffect(function () {\n    if (postAdded) {\n      setText('');\n    }\n  }, [postAdded === true]);\n  var onSubmitForm = useCallback(function (e) {\n    e.preventDefault();\n\n    if (!text || !text.trim()) {\n      return alert('게시글을 작성하세요');\n    }\n\n    var formData = new FormData();\n    imagePaths.forEach(function (i) {\n      formData.append('image', i);\n    });\n    formData.append('content', text);\n    dispatch({\n      type: ADD_POST_REQUEST,\n      data: formData\n    });\n  }, [text, imagePaths]);\n  var onChangeText = useCallback(function (e) {\n    setText(e.target.value);\n  }, []); // ajax 사용해서 form data 전송\n\n  var onChangeImage = useCallback(function (e) {\n    console.log(e.target.files);\n    var imageFormData = new FormData();\n    [].forEach.call(e.target.files, function (f) {\n      imageFormData.append('image', f);\n    });\n    dispatch({\n      type: UPLOAD_IMAGE_REQUEST,\n      data: imageFormData\n    });\n  }, []);\n  var onClickImageUpload = useCallback(function () {\n    imageInput.current.click();\n  }, [imageInput.current]);\n  var onRemoveImage = useCallback(function (index) {\n    return function () {\n      dispatch({\n        type: REMOVE_IMAGE,\n        index: index\n      });\n    };\n  }, []);\n  return (/*#__PURE__*/React.createElement(PostFormStyle, {\n      encType: \"multipart/form-data\",\n      onSubmit: onSubmitForm\n    }, /*#__PURE__*/React.createElement(Input.TextArea, {\n      maxLength: 140,\n      placeholder: \"HOW ARE YOU TODAY?\",\n      value: text,\n      onChange: onChangeText\n    }), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      multiple: true,\n      hidden: true,\n      ref: imageInput,\n      onChange: onChangeImage\n    }), /*#__PURE__*/React.createElement(Button, {\n      onClick: onClickImageUpload\n    }, \"\\uC774\\uBBF8\\uC9C0 \\uC5C5\\uB85C\\uB4DC\"), /*#__PURE__*/React.createElement(TwitBtn, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      loading: isAddingPost\n    }, \"TWIT!\")), /*#__PURE__*/React.createElement(\"div\", null, imagePaths.map(function (v, i) {\n      return (/*#__PURE__*/React.createElement(ThumbImg, {\n          key: v\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: \"http://localhost:7070/\".concat(v),\n          stype: {\n            width: '200px'\n          },\n          alt: v\n        }), /*#__PURE__*/React.createElement(\"div\", null, /*#__PURE__*/React.createElement(Button, {\n          onClick: onRemoveImage(i)\n        }, \"REMOVE\")))\n      );\n    })))\n  );\n};\n\nexport default PostForm;","map":null,"metadata":{},"sourceType":"module"}