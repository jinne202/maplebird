{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState, useCallback } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Form, Input, Button } from 'antd';\nimport { EDIT_NICKNAME_REQUEST } from '../reducers/user';\nimport { NickFormStyle, NickFormnInput, NickChangeBtn } from './Style/ContainerStyle';\n\nvar NicknameEditForm = function NicknameEditForm() {\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      editedName = _useState2[0],\n      setEditedName = _useState2[1];\n\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me,\n      isEditingNickname = _useSelector.isEditingNickname;\n\n  var onChangeNickname = useCallback(function (e) {\n    setEditedName(e.target.value);\n  }, []);\n  var onEditNickname = useCallback(function (e) {\n    e.preventDefault();\n    dispatch({\n      type: EDIT_NICKNAME_REQUEST,\n      data: editedName\n    });\n  }, [editedName]);\n  return (/*#__PURE__*/React.createElement(NickFormStyle, {\n      onSubmit: onEditNickname\n    }, /*#__PURE__*/React.createElement(NickFormnInput, {\n      addonBefore: \"Nickname\",\n      value: editedName,\n      onChange: onChangeNickname,\n      placeholder: me && me.nickname\n    }), /*#__PURE__*/React.createElement(NickChangeBtn, {\n      type: \"primary\",\n      loading: isEditingNickname,\n      htmlType: \"submit\"\n    }, \"Modify\"))\n  );\n};\n\nexport default NicknameEditForm;","map":{"version":3,"sources":["C:/project/nodebird/front/containers/NicknameEditForm.js"],"names":["React","useState","useCallback","useDispatch","useSelector","Form","Input","Button","EDIT_NICKNAME_REQUEST","NickFormStyle","NickFormnInput","NickChangeBtn","NicknameEditForm","editedName","setEditedName","dispatch","state","user","me","isEditingNickname","onChangeNickname","e","target","value","onEditNickname","preventDefault","type","data","nickname"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,IAAT,EAAeC,KAAf,EAAsBC,MAAtB,QAAoC,MAApC;AACA,SAASC,qBAAT,QAAsC,kBAAtC;AACA,SAASC,aAAT,EAAwBC,cAAxB,EAAwCC,aAAxC,QAA6D,wBAA7D;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAAA,kBACSX,QAAQ,CAAC,EAAD,CADjB;AAAA;AAAA,MACpBY,UADoB;AAAA,MACRC,aADQ;;AAE3B,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;;AAF2B,qBAGOC,WAAW,CAAC,UAAAY,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAHlB;AAAA,MAGnBC,EAHmB,gBAGnBA,EAHmB;AAAA,MAGfC,iBAHe,gBAGfA,iBAHe;;AAK3B,MAAMC,gBAAgB,GAAGlB,WAAW,CAAC,UAACmB,CAAD,EAAO;AACxCP,IAAAA,aAAa,CAACO,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb;AACH,GAFmC,EAEjC,EAFiC,CAApC;AAGA,MAAMC,cAAc,GAAGtB,WAAW,CAAC,UAACmB,CAAD,EAAO;AACtCA,IAAAA,CAAC,CAACI,cAAF;AACAV,IAAAA,QAAQ,CAAC;AACLW,MAAAA,IAAI,EAAGlB,qBADF;AAELmB,MAAAA,IAAI,EAAGd;AAFF,KAAD,CAAR;AAIH,GANiC,EAM/B,CAACA,UAAD,CAN+B,CAAlC;AAQA,uBACI,oBAAC,aAAD;AAAe,MAAA,QAAQ,EAAEW;AAAzB,oBACI,oBAAC,cAAD;AAAgB,MAAA,WAAW,EAAG,UAA9B;AAAyC,MAAA,KAAK,EAAIX,UAAlD;AAA8D,MAAA,QAAQ,EAAEO,gBAAxE;AAA0F,MAAA,WAAW,EAAKF,EAAE,IAAIA,EAAE,CAACU;AAAnH,MADJ,eAEI,oBAAC,aAAD;AAAe,MAAA,IAAI,EAAC,SAApB;AAA8B,MAAA,OAAO,EAAET,iBAAvC;AAA0D,MAAA,QAAQ,EAAC;AAAnE,gBAFJ;AADJ;AAMH,CAtBD;;AAwBA,eAAeP,gBAAf","sourcesContent":["import React, { useState, useCallback } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Form, Input, Button } from 'antd';\r\nimport { EDIT_NICKNAME_REQUEST } from '../reducers/user';\r\nimport { NickFormStyle, NickFormnInput, NickChangeBtn } from './Style/ContainerStyle';\r\n\r\nconst NicknameEditForm = () => {\r\n    const [editedName, setEditedName] = useState('');\r\n    const dispatch = useDispatch();\r\n    const { me, isEditingNickname } = useSelector(state => state.user);\r\n\r\n    const onChangeNickname = useCallback((e) => {\r\n        setEditedName(e.target.value);\r\n    }, []);\r\n    const onEditNickname = useCallback((e) => {\r\n        e.preventDefault();\r\n        dispatch({\r\n            type : EDIT_NICKNAME_REQUEST,\r\n            data : editedName,\r\n        });\r\n    }, [editedName]);\r\n\r\n    return (\r\n        <NickFormStyle onSubmit={onEditNickname}>\r\n            <NickFormnInput addonBefore = \"Nickname\" value = {editedName} onChange={onChangeNickname} placeholder = {(me && me.nickname)}/>\r\n            <NickChangeBtn type=\"primary\" loading={isEditingNickname} htmlType=\"submit\">Modify</NickChangeBtn>\r\n        </NickFormStyle>\r\n    );\r\n};\r\n\r\nexport default NicknameEditForm;"]},"metadata":{},"sourceType":"module"}