{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport React, { useState, useCallback, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { Button, Form, Input } from 'antd';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { ADD_COMMENT_REQUEST } from '../reducers/post';\nimport { CommentFormStyle, CommentFormItemStyle, CommentSubmitBtn } from './Style/ContainerStyle';\n\nvar CommentForm = function CommentForm(_ref) {\n  var post = _ref.post;\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      commentText = _useState2[0],\n      setCommentText = _useState2[1];\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      commentAdded = _useSelector.commentAdded,\n      isAddingComment = _useSelector.isAddingComment;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector2.me;\n\n  var dispatch = useDispatch();\n  var onSubmitComment = useCallback(function (e) {\n    e.preventDefault();\n\n    if (!me) {\n      return alert('로그인이 필요합니다');\n    }\n\n    return dispatch({\n      type: ADD_COMMENT_REQUEST,\n      data: {\n        postId: post.id,\n        content: commentText\n      }\n    });\n  }, [me && me.id, commentText]);\n  useEffect(function () {\n    setCommentText('');\n  }, [commentAdded === true]);\n  var onChangeCommentText = useCallback(function (e) {\n    setCommentText(e.target.value);\n  }, []);\n  return (/*#__PURE__*/React.createElement(CommentFormStyle, {\n      onSubmit: onSubmitComment\n    }, /*#__PURE__*/React.createElement(CommentFormItemStyle, null, /*#__PURE__*/React.createElement(Input.TextArea, {\n      rows: 4,\n      value: commentText,\n      onChange: onChangeCommentText\n    })), /*#__PURE__*/React.createElement(CommentSubmitBtn, {\n      type: \"primary\",\n      htmlType: \"submit\",\n      loading: isAddingComment\n    }, \"\\uC090\\uC57D\"))\n  );\n};\n\nCommentForm.propTypes = {\n  post: PropTypes.object.isRequired\n};\nexport default CommentForm;","map":null,"metadata":{},"sourceType":"module"}