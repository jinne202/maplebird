{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  addPostErrorReason: false,\n  //포스트 업로드 실패 사유\n  isAddingPost: false,\n  //포스트 업로드 중\n  postAdded: false,\n  //포스트 업로드 성공\n  isAddingComment: false,\n  addCommentErrorReason: '',\n  commentAdded: false,\n  hasMorePost: false,\n  singlePost: null\n};\nexport var LOAD_MAIN_POST_REQUEST = 'LOAD_MAIN_POST_REQUEST';\nexport var LOAD_MAIN_POST_SUCCESS = 'LOAD_MAIN_POST_SUCCESS';\nexport var LOAD_MAIN_POST_FAILURE = 'LOAD_MAIN_POST_FAILURE';\nexport var LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport var LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport var LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport var LOAD_USER_POST_REQUEST = 'LOAD_USER_POST_REQUEST';\nexport var LOAD_USER_POST_SUCCESS = 'LOAD_USER_POST_SUCCESS';\nexport var LOAD_USER_POST_FAILURE = 'LOAD_USER_POST_FAILURE';\nexport var UPLOAD_IMAGE_REQUEST = 'UPLOAD_IMAGE_REQUEST';\nexport var UPLOAD_IMAGE_SUCCESS = 'UPLOAD_IMAGE_SUCCESS';\nexport var UPLOAD_IMAGE_FAILURE = 'UPLOAD_IMAGE_FAILURE';\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var LOAD_COMMENT_REQUEST = 'LOAD_COMMENT_REQUEST';\nexport var LOAD_COMMENT_SUCCESS = 'LOAD_COMMENT_SUCCESS';\nexport var LOAD_COMMENT_FAILURE = 'LOAD_COMMENT_FAILURE';\nexport var RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport var RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport var RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport var LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport var LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\nexport var REMOVE_COMMENT_REQUEST = 'REMOVE_COMMENT_REQUEST';\nexport var REMOVE_COMMENT_SUCCESS = 'REMOVE_COMMENT_SUCCESS';\nexport var REMOVE_COMMENT_FAILURE = 'REMOVE_COMMENT_FAILURE';\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addPostErrorReason: '',\n          postAdded: false\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          mainPosts: [action.data].concat(_toConsumableArray(state.mainPosts)),\n          postAdded: true,\n          imagePaths: []\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPostErrorReason: action.error\n        });\n      }\n\n    case ADD_COMMENT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: true,\n          addCommentErrorReason: '',\n          commentAdded: false\n        });\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n        var post = state.mainPosts[postIndex];\n        var Comments = [].concat(_toConsumableArray(post.Comments), [action.data.comment]);\n\n        var mainPosts = _toConsumableArray(state.mainPosts);\n\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          Comments: Comments\n        });\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          mainPosts: mainPosts,\n          commentAdded: true,\n          // 오류 구간\n          singlePost: _objectSpread({}, state.singlePost, {\n            Comments: [].concat(_toConsumableArray(state.singlePost.Comments), [action.data.comment])\n          }) //\n\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          addCommentErrorReason: action.error\n        });\n      }\n\n    case LOAD_COMMENT_SUCCESS:\n      {\n        var _postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var _post = state.mainPosts[_postIndex];\n        var _Comments = action.data.comments;\n\n        var _mainPosts = _toConsumableArray(state.mainPosts);\n\n        _mainPosts[_postIndex] = _objectSpread({}, _post, {\n          Comments: _Comments\n        });\n        return _objectSpread({}, state, {\n          mainPosts: _mainPosts,\n          singlePost: _objectSpread({}, state.singlePost, {\n            Comments: action.data.comments\n          })\n        });\n      }\n\n    case LOAD_MAIN_POST_REQUEST:\n    case LOAD_HASHTAG_POSTS_REQUEST:\n    case LOAD_USER_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: !action.lastId ? [] : state.mainPosts,\n          hasMorePost: action.lastId ? state.hasMorePost : true\n        });\n      }\n\n    case LOAD_MAIN_POST_SUCCESS:\n    case LOAD_HASHTAG_POSTS_SUCCESS:\n    case LOAD_USER_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: state.mainPosts.concat(action.data),\n          hasMorePost: action.data.length === 10\n        });\n      }\n\n    case LOAD_MAIN_POST_FAILURE:\n    case LOAD_HASHTAG_POSTS_FAILURE:\n    case LOAD_USER_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UPLOAD_IMAGE_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UPLOAD_IMAGE_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          imagePaths: [].concat(_toConsumableArray(state.imagePaths), _toConsumableArray(action.data))\n        });\n      }\n\n    case UPLOAD_IMAGE_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_IMAGE:\n      {\n        return _objectSpread({}, state, {\n          imagePaths: state.imagePaths.filter(function (v, i) {\n            return i !== action.index;\n          })\n        });\n      }\n\n    case LIKE_POST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LIKE_POST_SUCCESS:\n      {\n        var _postIndex2 = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var _post2 = state.mainPosts[_postIndex2];\n        var Likers = [{\n          id: action.data.userId\n        }].concat(_toConsumableArray(_post2.Likers));\n\n        var _mainPosts2 = _toConsumableArray(state.mainPosts);\n\n        _mainPosts2[_postIndex2] = _objectSpread({}, _post2, {\n          Likers: Likers\n        });\n        return _objectSpread({}, state, {\n          mainPosts: _mainPosts2,\n          singlePost: _objectSpread({}, state.singlePost, {\n            Likers: [{\n              id: action.data.userId\n            }].concat(_toConsumableArray(state.singlePost.Likers))\n          })\n        });\n      }\n\n    case LIKE_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNLIKE_POST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNLIKE_POST_SUCCESS:\n      {\n        var _postIndex3 = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var _post3 = state.mainPosts[_postIndex3];\n\n        var _Likers = _post3.Likers.filter(function (v) {\n          return v.id !== action.data.userId;\n        });\n\n        var _mainPosts3 = _toConsumableArray(state.mainPosts);\n\n        _mainPosts3[_postIndex3] = _objectSpread({}, _post3, {\n          Likers: _Likers\n        });\n        return _objectSpread({}, state, {\n          mainPosts: _mainPosts3,\n          singlePost: _objectSpread({}, state.singlePost, {\n            Likers: state.singlePost.Likers.filter(function (v) {\n              return v.id !== action.data.userId;\n            })\n          })\n        });\n      }\n\n    case UNLIKE_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case RETWEET_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case RETWEET_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: [action.data].concat(_toConsumableArray(state.mainPosts))\n        });\n      }\n\n    case RETWEET_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_POST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: state.mainPosts.filter(function (v) {\n            return v.id !== action.data;\n          })\n        });\n      }\n\n    case REMOVE_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_COMMENT_REQUEST:\n      {\n        var _postIndex4 = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        console.log('postIndex', _postIndex4);\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_COMMENT_SUCCESS:\n      {\n        var _postIndex5 = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var _post4 = state.mainPosts[_postIndex5];\n\n        var _Comments2 = _post4.Comments.filter(function (v) {\n          return v.id !== action.data.commentId;\n        });\n\n        console.log('post', _post4);\n\n        var _mainPosts4 = _toConsumableArray(state.mainPosts);\n\n        _mainPosts4[_postIndex5] = _objectSpread({}, _post4, {\n          Comments: _Comments2\n        });\n        return _objectSpread({}, state, {\n          mainPosts: _mainPosts4,\n          singlePost: _objectSpread({}, state.singlePost, {\n            Comments: state.singlePost.Comments.filter(function (v) {\n              return v.id !== action.data.commentId;\n            })\n          })\n        });\n      }\n\n    case REMOVE_COMMENT_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          singlePost: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":{"version":3,"sources":["C:/project/nodebird/front/reducers/post.js"],"names":["initialState","mainPosts","imagePaths","addPostErrorReason","isAddingPost","postAdded","isAddingComment","addCommentErrorReason","commentAdded","hasMorePost","singlePost","LOAD_MAIN_POST_REQUEST","LOAD_MAIN_POST_SUCCESS","LOAD_MAIN_POST_FAILURE","LOAD_HASHTAG_POSTS_REQUEST","LOAD_HASHTAG_POSTS_SUCCESS","LOAD_HASHTAG_POSTS_FAILURE","LOAD_USER_POST_REQUEST","LOAD_USER_POST_SUCCESS","LOAD_USER_POST_FAILURE","UPLOAD_IMAGE_REQUEST","UPLOAD_IMAGE_SUCCESS","UPLOAD_IMAGE_FAILURE","REMOVE_IMAGE","ADD_POST_REQUEST","ADD_POST_SUCCESS","ADD_POST_FAILURE","LIKE_POST_REQUEST","LIKE_POST_SUCCESS","LIKE_POST_FAILURE","UNLIKE_POST_REQUEST","UNLIKE_POST_SUCCESS","UNLIKE_POST_FAILURE","ADD_COMMENT_REQUEST","ADD_COMMENT_SUCCESS","ADD_COMMENT_FAILURE","LOAD_COMMENT_REQUEST","LOAD_COMMENT_SUCCESS","LOAD_COMMENT_FAILURE","RETWEET_REQUEST","RETWEET_SUCCESS","RETWEET_FAILURE","REMOVE_POST_REQUEST","REMOVE_POST_SUCCESS","REMOVE_POST_FAILURE","LOAD_POST_REQUEST","LOAD_POST_SUCCESS","LOAD_POST_FAILURE","REMOVE_COMMENT_REQUEST","REMOVE_COMMENT_SUCCESS","REMOVE_COMMENT_FAILURE","state","action","type","data","error","postIndex","findIndex","v","id","postId","post","Comments","comment","comments","lastId","concat","length","filter","i","index","Likers","userId","console","log","commentId"],"mappings":"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","sourcesContent":["export const initialState = {\r\n    mainPosts : [],\r\n    imagePaths : [],\r\n    addPostErrorReason : false , //포스트 업로드 실패 사유\r\n    isAddingPost : false, //포스트 업로드 중\r\n    postAdded : false, //포스트 업로드 성공\r\n    isAddingComment : false,\r\n    addCommentErrorReason : '',\r\n    commentAdded : false,\r\n    hasMorePost : false,\r\n    singlePost : null,\r\n};\r\n\r\nexport const LOAD_MAIN_POST_REQUEST = 'LOAD_MAIN_POST_REQUEST';\r\nexport const LOAD_MAIN_POST_SUCCESS = 'LOAD_MAIN_POST_SUCCESS';\r\nexport const LOAD_MAIN_POST_FAILURE = 'LOAD_MAIN_POST_FAILURE';\r\n\r\nexport const LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\r\nexport const LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\r\nexport const LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\r\n\r\nexport const LOAD_USER_POST_REQUEST = 'LOAD_USER_POST_REQUEST';\r\nexport const LOAD_USER_POST_SUCCESS = 'LOAD_USER_POST_SUCCESS';\r\nexport const LOAD_USER_POST_FAILURE = 'LOAD_USER_POST_FAILURE';\r\n\r\nexport const UPLOAD_IMAGE_REQUEST = 'UPLOAD_IMAGE_REQUEST';\r\nexport const UPLOAD_IMAGE_SUCCESS = 'UPLOAD_IMAGE_SUCCESS';\r\nexport const UPLOAD_IMAGE_FAILURE = 'UPLOAD_IMAGE_FAILURE';\r\n\r\nexport const REMOVE_IMAGE = 'REMOVE_IMAGE'\r\n\r\nexport const ADD_POST_REQUEST = 'ADD_POST_REQUEST';\r\nexport const ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\r\nexport const ADD_POST_FAILURE = 'ADD_POST_FAILURE';\r\n\r\nexport const LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\r\nexport const LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\r\nexport const LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\r\n\r\nexport const UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\r\nexport const UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\r\nexport const UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\r\n\r\nexport const ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\r\nexport const ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\r\nexport const ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\r\n\r\nexport const LOAD_COMMENT_REQUEST = 'LOAD_COMMENT_REQUEST';\r\nexport const LOAD_COMMENT_SUCCESS = 'LOAD_COMMENT_SUCCESS';\r\nexport const LOAD_COMMENT_FAILURE = 'LOAD_COMMENT_FAILURE';\r\n\r\nexport const RETWEET_REQUEST = 'RETWEET_REQUEST';\r\nexport const RETWEET_SUCCESS = 'RETWEET_SUCCESS';\r\nexport const RETWEET_FAILURE = 'RETWEET_FAILURE';\r\n\r\nexport const REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\r\nexport const REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\r\nexport const REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\r\n\r\nexport const LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\r\nexport const LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\r\nexport const LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\r\n\r\nexport const REMOVE_COMMENT_REQUEST = 'REMOVE_COMMENT_REQUEST';\r\nexport const REMOVE_COMMENT_SUCCESS = 'REMOVE_COMMENT_SUCCESS';\r\nexport const REMOVE_COMMENT_FAILURE = 'REMOVE_COMMENT_FAILURE';\r\n\r\nexport default (state = initialState, action) => {\r\n    switch (action.type){\r\n        case ADD_POST_REQUEST : {\r\n            return {\r\n                ...state,\r\n                isAddingPost: true,\r\n                addPostErrorReason: '',\r\n                postAdded: false,\r\n            };\r\n        }\r\n        case ADD_POST_SUCCESS : {\r\n            return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                mainPosts: [action.data, ...state.mainPosts],\r\n                postAdded: true,\r\n                imagePaths: [],\r\n            };\r\n        }\r\n        case ADD_POST_FAILURE : {\r\n            return {\r\n                ...state,\r\n                isAddingPost: false,\r\n                addPostErrorReason: action.error,\r\n            };\r\n        }\r\n        case ADD_COMMENT_REQUEST : {\r\n            return {\r\n                ...state,\r\n                isAddingComment: true,\r\n                addCommentErrorReason: '',\r\n                commentAdded: false,\r\n            };\r\n        }\r\n        case ADD_COMMENT_SUCCESS : {\r\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            const post = state.mainPosts[postIndex];\r\n            const Comments = [...post.Comments, action.data.comment];\r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = { ...post, Comments };\r\n            return {\r\n                ...state,\r\n                isAddingComment: false,\r\n                mainPosts,\r\n                commentAdded: true,\r\n                // 오류 구간\r\n                singlePost : {\r\n                    ...state.singlePost,\r\n                    Comments : [...state.singlePost.Comments, action.data.comment],\r\n                }\r\n                //\r\n            };\r\n        }\r\n        case ADD_COMMENT_FAILURE : {\r\n            return {\r\n                ...state,\r\n                isAddingComment: false,\r\n                addCommentErrorReason: action.error,\r\n            };\r\n        }\r\n        case LOAD_COMMENT_SUCCESS : {\r\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            const post = state.mainPosts[postIndex];\r\n            const Comments = action.data.comments;\r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = { ...post, Comments };\r\n            return {\r\n                ...state,\r\n                mainPosts,\r\n                singlePost : {\r\n                    ...state.singlePost,\r\n                    Comments : action.data.comments,\r\n                }\r\n            };\r\n        }\r\n        case LOAD_MAIN_POST_REQUEST :\r\n        case LOAD_HASHTAG_POSTS_REQUEST :\r\n        case LOAD_USER_POST_REQUEST : {\r\n            return {\r\n                ...state,\r\n                mainPosts : !action.lastId ? [] : state.mainPosts,\r\n                hasMorePost : action.lastId ? state.hasMorePost : true,\r\n            };\r\n        }\r\n        case LOAD_MAIN_POST_SUCCESS :\r\n        case LOAD_HASHTAG_POSTS_SUCCESS :\r\n        case LOAD_USER_POST_SUCCESS : {\r\n            return {\r\n                ...state,\r\n                mainPosts : state.mainPosts.concat(action.data),\r\n                hasMorePost : action.data.length === 10,\r\n            };\r\n        }\r\n        case LOAD_MAIN_POST_FAILURE :\r\n        case LOAD_HASHTAG_POSTS_FAILURE :\r\n        case LOAD_USER_POST_FAILURE : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case UPLOAD_IMAGE_REQUEST : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case UPLOAD_IMAGE_SUCCESS : {\r\n            return {\r\n                ...state,\r\n                imagePaths: [...state.imagePaths, ...action.data],\r\n            };\r\n        }\r\n        case UPLOAD_IMAGE_FAILURE : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case REMOVE_IMAGE : {\r\n            return {\r\n                ...state,\r\n                imagePaths: state.imagePaths.filter((v, i) => i !== action.index),\r\n            };\r\n        }\r\n        case LIKE_POST_REQUEST : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case LIKE_POST_SUCCESS : {\r\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            const post = state.mainPosts[postIndex];\r\n            const Likers = [{ id: action.data.userId }, ...post.Likers];\r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = { ...post, Likers };\r\n            return {\r\n                ...state,\r\n                mainPosts,\r\n                singlePost : {\r\n                    ...state.singlePost,\r\n                    Likers : [{id : action.data.userId}, ...state.singlePost.Likers],\r\n                }\r\n            };\r\n        }\r\n        case LIKE_POST_FAILURE : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case UNLIKE_POST_REQUEST : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case UNLIKE_POST_SUCCESS : {\r\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            const post = state.mainPosts[postIndex];\r\n            const Likers = post.Likers.filter(v => v.id !== action.data.userId);\r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = { ...post, Likers };\r\n            return {\r\n                ...state,\r\n                mainPosts,\r\n                singlePost : {\r\n                    ...state.singlePost,\r\n                    Likers : state.singlePost.Likers.filter(v => v.id !== action.data.userId)\r\n                }\r\n            };\r\n        }\r\n        case UNLIKE_POST_FAILURE : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case RETWEET_REQUEST : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case RETWEET_SUCCESS : {\r\n            return {\r\n                ...state,\r\n                mainPosts: [action.data, ...state.mainPosts],\r\n            };\r\n        }\r\n        case RETWEET_FAILURE : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case REMOVE_POST_REQUEST : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case REMOVE_POST_SUCCESS : {\r\n            return {\r\n                ...state,\r\n                mainPosts : state.mainPosts.filter(v => v.id !== action.data)\r\n            };\r\n        }\r\n        case REMOVE_POST_FAILURE : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case REMOVE_COMMENT_REQUEST : {\r\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            console.log('postIndex', postIndex);\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n        case REMOVE_COMMENT_SUCCESS : {\r\n            const postIndex = state.mainPosts.findIndex(v => v.id === action.data.postId);\r\n            const post = state.mainPosts[postIndex];\r\n            const Comments = post.Comments.filter(v => v.id !== action.data.commentId);\r\n            console.log('post',post)\r\n            const mainPosts = [...state.mainPosts];\r\n            mainPosts[postIndex] = {...post, Comments};\r\n            return {\r\n                ...state,\r\n                mainPosts,\r\n                singlePost : {\r\n                    ...state.singlePost,\r\n                    Comments : state.singlePost.Comments.filter(v => v.id !== action.data.commentId)\r\n                }\r\n            };\r\n        }\r\n        case REMOVE_COMMENT_FAILURE : {\r\n            return {\r\n                ...state,\r\n            }\r\n        }\r\n        case LOAD_POST_SUCCESS : {\r\n            \r\n            return {\r\n                ...state,\r\n                singlePost : action.data,\r\n            }\r\n        }\r\n        default : {\r\n            return {\r\n                ...state,\r\n            };\r\n        }\r\n    }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}