{"ast":null,"code":"import _slicedToArray from \"@babel/runtime-corejs2/helpers/esm/slicedToArray\";\nimport _taggedTemplateLiteral from \"@babel/runtime-corejs2/helpers/esm/taggedTemplateLiteral\";\n\nfunction _templateObject5() {\n  var data = _taggedTemplateLiteral([\"\\n    position : absolute;\\n    right : 0;\\n    top : 0;\\n    padding : 15px;\\n    line-height : 14px;\\n    cursor : pointer;\\n\"]);\n\n  _templateObject5 = function _templateObject5() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject4() {\n  var data = _taggedTemplateLiteral([\"\\n    height : calc(100% - 44px);\\n    background : rgba(0,0,0,0.5);\\n\"]);\n\n  _templateObject4 = function _templateObject4() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject3() {\n  var data = _taggedTemplateLiteral([\"\\n    margin : 0;\\n    font-size : 17px;\\n    color: #333;\\n    line-height : 44px;\\n\"]);\n\n  _templateObject3 = function _templateObject3() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject2() {\n  var data = _taggedTemplateLiteral([\"\\n    height : 44px;\\n    background : white;\\n    position : realative;\\n    padding : 0;\\n    text-align : center;\\n\"]);\n\n  _templateObject2 = function _templateObject2() {\n    return data;\n  };\n\n  return data;\n}\n\nfunction _templateObject() {\n  var data = _taggedTemplateLiteral([\"\\n    position : fixed;\\n    z-index : 5000;\\n    top : 0;\\n    left : 0;\\n    right : 0;\\n    bottom : 0;\\n\"]);\n\n  _templateObject = function _templateObject() {\n    return data;\n  };\n\n  return data;\n}\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { Icon } from 'antd';\nimport PostImages from './PostImages';\nimport Slick from 'react-slick';\nimport styled from 'styled-components';\nvar Overlay = styled.div(_templateObject());\nvar Header = styled.header(_templateObject2());\nvar H1 = styled.h1(_templateObject3());\nvar SlickWrapper = styled.div(_templateObject4());\nvar CloseBtn = styled(Icon)(_templateObject5());\n\nvar ImagesZoom = function ImagesZoom(_ref) {\n  var images = _ref.images,\n      onClose = _ref.onClose;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentSlide = _useState2[0],\n      setCurrentSlide = _useState2[1];\n\n  return (/*#__PURE__*/React.createElement(Overlay, null, /*#__PURE__*/React.createElement(Header, null, /*#__PURE__*/React.createElement(H1, null, \"Image\"), /*#__PURE__*/React.createElement(CloseBtn, {\n      type: \"close\",\n      onClick: onClose\n    })), /*#__PURE__*/React.createElement(SlickWrapper, null, /*#__PURE__*/React.createElement(Slick, {\n      initialSlide: 0 //몇번째 이미지를 처음으로 보여줄지\n      ,\n      afterChange: function afterChange(slide) {\n        return setCurrentSlide(slide);\n      },\n      infinite: false,\n      arrows: true,\n      slidesToShow: 1,\n      slidesToScroll: 1\n    }, images.map(function (v) {\n      return (/*#__PURE__*/React.createElement(\"div\", {\n          style: {\n            padding: '32px',\n            textAlign: 'center'\n          }\n        }, /*#__PURE__*/React.createElement(\"img\", {\n          src: \"http://localhost:7070/\".concat(v.src),\n          style: {\n            margin: '0 auto',\n            maxHeight: '750px'\n          }\n        }))\n      );\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        textAlign: 'center'\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      style: {\n        width: 75,\n        height: 30,\n        lineHeight: '30px',\n        background: '#313131',\n        display: 'inline-block',\n        textAlign: 'center',\n        color: 'white',\n        fontSize: '15px'\n      }\n    }, currentSlide + 1, \" / \", images.length))))\n  );\n};\n\nImagesZoom.propTypes = {\n  images: PropTypes.arrayOf(PropTypes.shape({\n    src: PropTypes.string\n  })).isRequired,\n  onClose: PropTypes.func.isRequired\n};\nexport default ImagesZoom;","map":{"version":3,"sources":["C:/project/nodebird/front/components/ImagesZoom.js"],"names":["React","useState","PropTypes","Icon","PostImages","Slick","styled","Overlay","div","Header","header","H1","h1","SlickWrapper","CloseBtn","ImagesZoom","images","onClose","currentSlide","setCurrentSlide","slide","map","v","padding","textAlign","src","margin","maxHeight","width","height","lineHeight","background","display","color","fontSize","length","propTypes","arrayOf","shape","string","isRequired","func"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,IAAT,QAAqB,MAArB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,MAAP,MAAmB,mBAAnB;AAEA,IAAMC,OAAO,GAAGD,MAAM,CAACE,GAAV,mBAAb;AASA,IAAMC,MAAM,GAAGH,MAAM,CAACI,MAAV,oBAAZ;AAQA,IAAMC,EAAE,GAAGL,MAAM,CAACM,EAAV,oBAAR;AAOA,IAAMC,YAAY,GAAGP,MAAM,CAACE,GAAV,oBAAlB;AAKA,IAAMM,QAAQ,GAAGR,MAAM,CAACH,IAAD,CAAT,oBAAd;;AASA,IAAMY,UAAU,GAAG,SAAbA,UAAa,OAAyB;AAAA,MAAtBC,MAAsB,QAAtBA,MAAsB;AAAA,MAAdC,OAAc,QAAdA,OAAc;;AAAA,kBACAhB,QAAQ,CAAC,CAAD,CADR;AAAA;AAAA,MACjCiB,YADiC;AAAA,MACnBC,eADmB;;AAGxC,uBACI,oBAAC,OAAD,qBACI,oBAAC,MAAD,qBACI,oBAAC,EAAD,gBADJ,eAEI,oBAAC,QAAD;AAAU,MAAA,IAAI,EAAC,OAAf;AAAuB,MAAA,OAAO,EAAEF;AAAhC,MAFJ,CADJ,eAKI,oBAAC,YAAD,qBACI,oBAAC,KAAD;AACI,MAAA,YAAY,EAAE,CADlB,CACqB;AADrB;AAEI,MAAA,WAAW,EAAE,qBAACG,KAAD;AAAA,eAAWD,eAAe,CAACC,KAAD,CAA1B;AAAA,OAFjB;AAGI,MAAA,QAAQ,EAAE,KAHd;AAII,MAAA,MAAM,MAJV;AAKI,MAAA,YAAY,EAAE,CALlB;AAMI,MAAA,cAAc,EAAE;AANpB,OAQMJ,MAAM,CAACK,GAAP,CAAW,UAACC,CAAD,EAAO;AAChB,2BACI;AAAK,UAAA,KAAK,EAAG;AAAEC,YAAAA,OAAO,EAAG,MAAZ;AAAoBC,YAAAA,SAAS,EAAG;AAAhC;AAAb,wBACI;AAAK,UAAA,GAAG,kCAA2BF,CAAC,CAACG,GAA7B,CAAR;AAA4C,UAAA,KAAK,EAAG;AAAEC,YAAAA,MAAM,EAAG,QAAX;AAAqBC,YAAAA,SAAS,EAAG;AAAjC;AAApD,UADJ;AADJ;AAKH,KANC,CARN,CADJ,eAiBI;AAAK,MAAA,KAAK,EAAI;AAACH,QAAAA,SAAS,EAAG;AAAb;AAAd,oBACI;AAAK,MAAA,KAAK,EAAE;AAACI,QAAAA,KAAK,EAAG,EAAT;AAAaC,QAAAA,MAAM,EAAG,EAAtB;AAA0BC,QAAAA,UAAU,EAAG,MAAvC;AAA+CC,QAAAA,UAAU,EAAG,SAA5D;AAAuEC,QAAAA,OAAO,EAAG,cAAjF;AAAiGR,QAAAA,SAAS,EAAG,QAA7G;AAAuHS,QAAAA,KAAK,EAAG,OAA/H;AAAwIC,QAAAA,QAAQ,EAAG;AAAnJ;AAAZ,OACKhB,YAAY,GAAG,CADpB,SAC0BF,MAAM,CAACmB,MADjC,CADJ,CAjBJ,CALJ;AADJ;AA+BH,CAlCD;;AAoCApB,UAAU,CAACqB,SAAX,GAAuB;AACnBpB,EAAAA,MAAM,EAAGd,SAAS,CAACmC,OAAV,CAAkBnC,SAAS,CAACoC,KAAV,CAAgB;AACvCb,IAAAA,GAAG,EAAGvB,SAAS,CAACqC;AADuB,GAAhB,CAAlB,EAELC,UAHe;AAInBvB,EAAAA,OAAO,EAAGf,SAAS,CAACuC,IAAV,CAAeD;AAJN,CAAvB;AAOA,eAAezB,UAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Icon } from 'antd';\r\nimport PostImages from './PostImages';\r\nimport Slick from 'react-slick';\r\nimport styled from 'styled-components';\r\n\r\nconst Overlay = styled.div`\r\n    position : fixed;\r\n    z-index : 5000;\r\n    top : 0;\r\n    left : 0;\r\n    right : 0;\r\n    bottom : 0;\r\n`;\r\n\r\nconst Header = styled.header`\r\n    height : 44px;\r\n    background : white;\r\n    position : realative;\r\n    padding : 0;\r\n    text-align : center;\r\n`;\r\n\r\nconst H1 = styled.h1`\r\n    margin : 0;\r\n    font-size : 17px;\r\n    color: #333;\r\n    line-height : 44px;\r\n`;\r\n\r\nconst SlickWrapper = styled.div`\r\n    height : calc(100% - 44px);\r\n    background : rgba(0,0,0,0.5);\r\n`;\r\n\r\nconst CloseBtn = styled(Icon)`\r\n    position : absolute;\r\n    right : 0;\r\n    top : 0;\r\n    padding : 15px;\r\n    line-height : 14px;\r\n    cursor : pointer;\r\n`;\r\n\r\nconst ImagesZoom = ({ images, onClose }) => {\r\n    const [currentSlide, setCurrentSlide] = useState(0);\r\n\r\n    return(\r\n        <Overlay>\r\n            <Header>\r\n                <H1>Image</H1>\r\n                <CloseBtn type=\"close\" onClick={onClose}/>\r\n                </Header>\r\n            <SlickWrapper>\r\n                <Slick\r\n                    initialSlide={0} //몇번째 이미지를 처음으로 보여줄지\r\n                    afterChange={(slide) => setCurrentSlide(slide)}\r\n                    infinite={false}\r\n                    arrows\r\n                    slidesToShow={1}\r\n                    slidesToScroll={1}\r\n                >\r\n                    { images.map((v) => {\r\n                        return (\r\n                            <div style ={{ padding : '32px', textAlign : 'center' }}>\r\n                                <img src={`http://localhost:7070/${v.src}`} style ={{ margin : '0 auto', maxHeight : '750px' }}/>\r\n                            </div>\r\n                        )\r\n                    })}\r\n                </Slick>\r\n                <div style = {{textAlign : 'center'}}>\r\n                    <div style={{width : 75, height : 30, lineHeight : '30px', background : '#313131', display : 'inline-block', textAlign : 'center', color : 'white', fontSize : '15px'}}>\r\n                        {currentSlide + 1} / {images.length}\r\n                    </div>\r\n                </div>\r\n            </SlickWrapper>\r\n        </Overlay>\r\n    )\r\n};\r\n\r\nImagesZoom.propTypes = {\r\n    images : PropTypes.arrayOf(PropTypes.shape({\r\n        src : PropTypes.string,\r\n    })).isRequired,\r\n    onClose : PropTypes.func.isRequired,\r\n};\r\n\r\nexport default ImagesZoom;"]},"metadata":{},"sourceType":"module"}