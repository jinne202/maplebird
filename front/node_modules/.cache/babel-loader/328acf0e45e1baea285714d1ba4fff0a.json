{"ast":null,"code":"import _toConsumableArray from \"@babel/runtime-corejs2/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"@babel/runtime-corejs2/helpers/esm/objectSpread\";\nimport produce from 'immer';\nexport var initialState = {\n  mainPosts: [],\n  imagePaths: [],\n  addPostErrorReason: false,\n  //포스트 업로드 실패 사유\n  isAddingPost: false,\n  //포스트 업로드 중\n  postAdded: false,\n  //포스트 업로드 성공\n  isAddingComment: false,\n  addCommentErrorReason: '',\n  commentAdded: false,\n  hasMorePost: false,\n  singlePost: null\n};\nexport var LOAD_MAIN_POST_REQUEST = 'LOAD_MAIN_POST_REQUEST';\nexport var LOAD_MAIN_POST_SUCCESS = 'LOAD_MAIN_POST_SUCCESS';\nexport var LOAD_MAIN_POST_FAILURE = 'LOAD_MAIN_POST_FAILURE';\nexport var LOAD_HASHTAG_POSTS_REQUEST = 'LOAD_HASHTAG_POSTS_REQUEST';\nexport var LOAD_HASHTAG_POSTS_SUCCESS = 'LOAD_HASHTAG_POSTS_SUCCESS';\nexport var LOAD_HASHTAG_POSTS_FAILURE = 'LOAD_HASHTAG_POSTS_FAILURE';\nexport var LOAD_USER_POST_REQUEST = 'LOAD_USER_POST_REQUEST';\nexport var LOAD_USER_POST_SUCCESS = 'LOAD_USER_POST_SUCCESS';\nexport var LOAD_USER_POST_FAILURE = 'LOAD_USER_POST_FAILURE';\nexport var UPLOAD_IMAGE_REQUEST = 'UPLOAD_IMAGE_REQUEST';\nexport var UPLOAD_IMAGE_SUCCESS = 'UPLOAD_IMAGE_SUCCESS';\nexport var UPLOAD_IMAGE_FAILURE = 'UPLOAD_IMAGE_FAILURE';\nexport var REMOVE_IMAGE = 'REMOVE_IMAGE';\nexport var ADD_POST_REQUEST = 'ADD_POST_REQUEST';\nexport var ADD_POST_SUCCESS = 'ADD_POST_SUCCESS';\nexport var ADD_POST_FAILURE = 'ADD_POST_FAILURE';\nexport var LIKE_POST_REQUEST = 'LIKE_POST_REQUEST';\nexport var LIKE_POST_SUCCESS = 'LIKE_POST_SUCCESS';\nexport var LIKE_POST_FAILURE = 'LIKE_POST_FAILURE';\nexport var UNLIKE_POST_REQUEST = 'UNLIKE_POST_REQUEST';\nexport var UNLIKE_POST_SUCCESS = 'UNLIKE_POST_SUCCESS';\nexport var UNLIKE_POST_FAILURE = 'UNLIKE_POST_FAILURE';\nexport var ADD_COMMENT_REQUEST = 'ADD_COMMENT_REQUEST';\nexport var ADD_COMMENT_SUCCESS = 'ADD_COMMENT_SUCCESS';\nexport var ADD_COMMENT_FAILURE = 'ADD_COMMENT_FAILURE';\nexport var LOAD_COMMENT_REQUEST = 'LOAD_COMMENT_REQUEST';\nexport var LOAD_COMMENT_SUCCESS = 'LOAD_COMMENT_SUCCESS';\nexport var LOAD_COMMENT_FAILURE = 'LOAD_COMMENT_FAILURE';\nexport var RETWEET_REQUEST = 'RETWEET_REQUEST';\nexport var RETWEET_SUCCESS = 'RETWEET_SUCCESS';\nexport var RETWEET_FAILURE = 'RETWEET_FAILURE';\nexport var REMOVE_POST_REQUEST = 'REMOVE_POST_REQUEST';\nexport var REMOVE_POST_SUCCESS = 'REMOVE_POST_SUCCESS';\nexport var REMOVE_POST_FAILURE = 'REMOVE_POST_FAILURE';\nexport var LOAD_POST_REQUEST = 'LOAD_POST_REQUEST';\nexport var LOAD_POST_SUCCESS = 'LOAD_POST_SUCCESS';\nexport var LOAD_POST_FAILURE = 'LOAD_POST_FAILURE';\nexport var REMOVE_COMMENT_REQUEST = 'REMOVE_COMMENT_REQUEST';\nexport var REMOVE_COMMENT_SUCCESS = 'REMOVE_COMMENT_SUCCESS';\nexport var REMOVE_COMMENT_FAILURE = 'REMOVE_COMMENT_FAILURE';\nexport default (function () {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case ADD_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: true,\n          addPostErrorReason: '',\n          postAdded: false\n        });\n      }\n\n    case ADD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          mainPosts: [action.data].concat(_toConsumableArray(state.mainPosts)),\n          postAdded: true,\n          imagePaths: []\n        });\n      }\n\n    case ADD_POST_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingPost: false,\n          addPostErrorReason: action.error\n        });\n      }\n\n    case ADD_COMMENT_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: true,\n          addCommentErrorReason: '',\n          commentAdded: false\n        });\n      }\n\n    case ADD_COMMENT_SUCCESS:\n      {\n        var postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n        var post = state.mainPosts[postIndex];\n        var Comments = [].concat(_toConsumableArray(post.Comments), [action.data.comment]);\n\n        var mainPosts = _toConsumableArray(state.mainPosts);\n\n        mainPosts[postIndex] = _objectSpread({}, post, {\n          Comments: Comments\n        });\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          mainPosts: mainPosts,\n          commentAdded: true,\n          singlePost: _objectSpread({}, state.singlePost, {\n            Comments: [].concat(_toConsumableArray(singlePost.Comments), [action.data.comment])\n          })\n        });\n      }\n\n    case ADD_COMMENT_FAILURE:\n      {\n        return _objectSpread({}, state, {\n          isAddingComment: false,\n          addCommentErrorReason: action.error\n        });\n      }\n\n    case LOAD_COMMENT_SUCCESS:\n      {\n        var _postIndex = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var _post = state.mainPosts[_postIndex];\n        var _Comments = action.data.comments;\n\n        var _mainPosts = _toConsumableArray(state.mainPosts);\n\n        _mainPosts[_postIndex] = _objectSpread({}, _post, {\n          Comments: _Comments\n        });\n        return _objectSpread({}, state, {\n          mainPosts: _mainPosts\n        });\n      }\n\n    case LOAD_MAIN_POST_REQUEST:\n    case LOAD_HASHTAG_POSTS_REQUEST:\n    case LOAD_USER_POST_REQUEST:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: action.lastId === 0 ? [] : state.mainPosts,\n          hasMorePost: action.lastId ? state.hasMorePost : true\n        });\n      }\n\n    case LOAD_MAIN_POST_SUCCESS:\n    case LOAD_HASHTAG_POSTS_SUCCESS:\n    case LOAD_USER_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: state.mainPosts.concat(action.data),\n          hasMorePost: action.data.length === 10\n        });\n      }\n\n    case LOAD_MAIN_POST_FAILURE:\n    case LOAD_HASHTAG_POSTS_FAILURE:\n    case LOAD_USER_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UPLOAD_IMAGE_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UPLOAD_IMAGE_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          imagePaths: [].concat(_toConsumableArray(state.imagePaths), _toConsumableArray(action.data))\n        });\n      }\n\n    case UPLOAD_IMAGE_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_IMAGE:\n      {\n        return _objectSpread({}, state, {\n          imagePaths: state.imagePaths.filter(function (v, i) {\n            return i !== action.index;\n          })\n        });\n      }\n\n    case LIKE_POST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LIKE_POST_SUCCESS:\n      {\n        var _postIndex2 = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var _post2 = state.mainPosts[_postIndex2];\n        var Likers = [{\n          id: action.data.userId\n        }].concat(_toConsumableArray(_post2.Likers));\n\n        var _mainPosts2 = _toConsumableArray(state.mainPosts);\n\n        _mainPosts2[_postIndex2] = _objectSpread({}, _post2, {\n          Likers: Likers\n        });\n        return _objectSpread({}, state, {\n          mainPosts: _mainPosts2,\n          singlePost: _objectSpread({}, state.singlePost, {\n            Likers: [{\n              id: action.data.userId\n            }].concat(_toConsumableArray(state.singlePost.Likers))\n          })\n        });\n      }\n\n    case LIKE_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNLIKE_POST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case UNLIKE_POST_SUCCESS:\n      {\n        var _postIndex3 = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var _post3 = state.mainPosts[_postIndex3];\n\n        var _Likers = _post3.Likers.filter(function (v) {\n          return v.id !== action.data.userId;\n        });\n\n        var _mainPosts3 = _toConsumableArray(state.mainPosts);\n\n        _mainPosts3[_postIndex3] = _objectSpread({}, _post3, {\n          Likers: _Likers\n        });\n        return _objectSpread({}, state, {\n          mainPosts: _mainPosts3,\n          singlePost: _objectSpread({}, state.singlePost, {\n            Likers: state.singlePost.Likers.filter(function (v) {\n              return v.id !== action.data.userId;\n            })\n          })\n        });\n      }\n\n    case UNLIKE_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case RETWEET_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case RETWEET_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: [action.data].concat(_toConsumableArray(state.mainPosts))\n        });\n      }\n\n    case RETWEET_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_POST_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          mainPosts: state.mainPosts.filter(function (v) {\n            return v.id !== action.data;\n          })\n        });\n      }\n\n    case REMOVE_POST_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_COMMENT_REQUEST:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case REMOVE_COMMENT_SUCCESS:\n      {\n        var _postIndex4 = state.mainPosts.findIndex(function (v) {\n          return v.id === action.data.postId;\n        });\n\n        var _post4 = state.mainPosts[_postIndex4];\n\n        var _Comments2 = _post4.Comments.filter(function (v) {\n          return v.id !== action.data.comment;\n        });\n\n        var _mainPosts4 = _toConsumableArray(state.mainPosts);\n\n        _mainPosts4[_postIndex4] = _objectSpread({}, _post4, {\n          Comments: _Comments2\n        });\n        return _objectSpread({}, state, {\n          mainPosts: _mainPosts4\n        });\n      }\n\n    case REMOVE_COMMENT_FAILURE:\n      {\n        return _objectSpread({}, state);\n      }\n\n    case LOAD_POST_SUCCESS:\n      {\n        return _objectSpread({}, state, {\n          singlePost: action.data\n        });\n      }\n\n    default:\n      {\n        return _objectSpread({}, state);\n      }\n  }\n});","map":null,"metadata":{},"sourceType":"module"}