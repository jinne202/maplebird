{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _Object$keys from \"@babel/runtime-corejs2/core-js/object/keys\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React, { useEffect, useCallback, useRef } from 'react';\nimport PostForm from '../components/PostForm';\nimport PostCard from '../components/PostCard';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOG_IN_REQUEST } from '../reducers/user';\nimport { LOAD_MAIN_POST_REQUEST } from '../reducers/post';\n\nvar Home = function Home() {\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.user;\n  }),\n      me = _useSelector.me;\n\n  var _useSelector2 = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector2.mainPosts,\n      hasMorePost = _useSelector2.hasMorePost;\n\n  var countRef = useRef([]);\n  var onScroll = useCallback(function () {\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n      if (hasMorePost) {\n        var lastId = mainPosts[mainPosts.length - 1].id;\n\n        if (!countRef.current.includes(lastId)) {\n          dispatch({\n            type: LOAD_MAIN_POST_REQUEST,\n            lastId: lastId\n          });\n          countRef.current.push(lastId);\n        }\n      }\n    }\n  }, [hasMorePost, mainPosts.length]);\n  useEffect(function () {\n    window.addEventListener('scroll', onScroll);\n    return function () {\n      window.removeEventListener('scroll', onScroll);\n    };\n  }, [mainPosts.length]);\n  return (/*#__PURE__*/React.createElement(\"div\", null, me && /*#__PURE__*/React.createElement(PostForm, null), mainPosts.map(function (c) {\n      return (/*#__PURE__*/React.createElement(PostCard, {\n          key: c.id,\n          post: c\n        })\n      );\n    }))\n  );\n};\n\nHome.getInitialProps = /*#__PURE__*/function () {\n  var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log(_Object$keys(context));\n            context.store.dispatch({\n              type: LOAD_MAIN_POST_REQUEST\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref.apply(this, arguments);\n  };\n}();\n\nexport default Home;","map":{"version":3,"sources":["C:/project/nodebird/front/pages/index.js"],"names":["React","useEffect","useCallback","useRef","PostForm","PostCard","useDispatch","useSelector","LOG_IN_REQUEST","LOAD_MAIN_POST_REQUEST","Home","dispatch","state","user","me","post","mainPosts","hasMorePost","countRef","onScroll","window","scrollY","document","documentElement","clientHeight","scrollHeight","lastId","length","id","current","includes","type","push","addEventListener","removeEventListener","map","c","getInitialProps","context","console","log","store"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,WAA3B,EAAwCC,MAAxC,QAAsD,OAAtD;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,OAAOC,QAAP,MAAqB,wBAArB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,cAAT,QAA+B,kBAA/B;AACA,SAASC,sBAAT,QAAuC,kBAAvC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM;AACjB,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;;AADiB,qBAEFC,WAAW,CAAC,UAAAK,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAFT;AAAA,MAETC,EAFS,gBAETA,EAFS;;AAAA,sBAGkBP,WAAW,CAAC,UAAAK,KAAK;AAAA,WAAIA,KAAK,CAACG,IAAV;AAAA,GAAN,CAH7B;AAAA,MAGTC,SAHS,iBAGTA,SAHS;AAAA,MAGEC,WAHF,iBAGEA,WAHF;;AAIjB,MAAMC,QAAQ,GAAGf,MAAM,CAAC,EAAD,CAAvB;AAEA,MAAMgB,QAAQ,GAAGjB,WAAW,CAAC,YAAM;AACjC,QAAIkB,MAAM,CAACC,OAAP,GAAiBC,QAAQ,CAACC,eAAT,CAAyBC,YAA1C,GAAyDF,QAAQ,CAACC,eAAT,CAAyBE,YAAzB,GAAwC,GAArG,EAA0G;AACxG,UAAIR,WAAJ,EAAiB;AACf,YAAMS,MAAM,GAAGV,SAAS,CAACA,SAAS,CAACW,MAAV,GAAmB,CAApB,CAAT,CAAgCC,EAA/C;;AACA,YAAI,CAACV,QAAQ,CAACW,OAAT,CAAiBC,QAAjB,CAA0BJ,MAA1B,CAAL,EAAuC;AACrCf,UAAAA,QAAQ,CAAC;AACPoB,YAAAA,IAAI,EAAGtB,sBADA;AAEPiB,YAAAA,MAAM,EAANA;AAFO,WAAD,CAAR;AAIAR,UAAAA,QAAQ,CAACW,OAAT,CAAiBG,IAAjB,CAAsBN,MAAtB;AACD;AACF;AACF;AACF,GAb2B,EAazB,CAACT,WAAD,EAAcD,SAAS,CAACW,MAAxB,CAbyB,CAA5B;AAeA1B,EAAAA,SAAS,CAAC,YAAM;AACdmB,IAAAA,MAAM,CAACa,gBAAP,CAAwB,QAAxB,EAAkCd,QAAlC;AACA,WAAO,YAAM;AACXC,MAAAA,MAAM,CAACc,mBAAP,CAA2B,QAA3B,EAAqCf,QAArC;AACD,KAFD;AAGD,GALQ,EAKN,CAACH,SAAS,CAACW,MAAX,CALM,CAAT;AAOA,uBACI,iCACGb,EAAE,iBAAI,oBAAC,QAAD,OADT,EAEGE,SAAS,CAACmB,GAAV,CAAc,UAACC,CAAD,EAAO;AACpB,2BACE,oBAAC,QAAD;AAAU,UAAA,GAAG,EAAEA,CAAC,CAACR,EAAjB;AAAqB,UAAA,IAAI,EAAEQ;AAA3B;AADF;AAGD,KAJA,CAFH;AADJ;AAUD,CAtCD;;AAwCA1B,IAAI,CAAC2B,eAAL;AAAA,sEAAuB,iBAAQC,OAAR;AAAA;AAAA;AAAA;AAAA;AACrBC,YAAAA,OAAO,CAACC,GAAR,CAAY,aAAYF,OAAZ,CAAZ;AACAA,YAAAA,OAAO,CAACG,KAAR,CAAc9B,QAAd,CAAuB;AACrBoB,cAAAA,IAAI,EAAGtB;AADc,aAAvB;;AAFqB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAOA,eAAeC,IAAf","sourcesContent":["import React, { useEffect, useCallback, useRef } from 'react';\r\nimport PostForm from '../components/PostForm';\r\nimport PostCard from '../components/PostCard';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { LOG_IN_REQUEST } from '../reducers/user';\r\nimport { LOAD_MAIN_POST_REQUEST } from '../reducers/post';\r\n\r\nconst Home = () => {\r\n  const dispatch = useDispatch();\r\n  const { me } = useSelector(state => state.user);\r\n  const { mainPosts, hasMorePost } = useSelector(state => state.post);\r\n  const countRef = useRef([]);\r\n\r\n  const onScroll = useCallback(() => {\r\n    if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\r\n      if (hasMorePost) {\r\n        const lastId = mainPosts[mainPosts.length - 1].id;\r\n        if (!countRef.current.includes(lastId)){\r\n          dispatch({\r\n            type : LOAD_MAIN_POST_REQUEST,\r\n            lastId,\r\n          });\r\n          countRef.current.push(lastId);\r\n        }\r\n      }\r\n    }\r\n  }, [hasMorePost, mainPosts.length]);\r\n\r\n  useEffect(() => {\r\n    window.addEventListener('scroll', onScroll);\r\n    return () => {\r\n      window.removeEventListener('scroll', onScroll);\r\n    }\r\n  }, [mainPosts.length]);\r\n\r\n  return (\r\n      <div>\r\n        {me && <PostForm/>}\r\n        {mainPosts.map((c) => {\r\n          return (\r\n            <PostCard key={c.id} post={c}/>\r\n          )\r\n        })}\r\n      </div>\r\n  );\r\n};\r\n\r\nHome.getInitialProps = async ( context ) => {\r\n  console.log(Object.keys(context));\r\n  context.store.dispatch({\r\n    type : LOAD_MAIN_POST_REQUEST,\r\n  });\r\n}\r\n\r\nexport default Home;"]},"metadata":{},"sourceType":"module"}