{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport AppLayout from '../components/AppLayout';\nimport { Provider } from 'react-redux';\nimport { createStore, compose, applyMiddleware } from 'redux';\nimport createSagaMiddleware from 'redux-saga';\nimport withRedux from 'next-redux-wrapper';\nimport withReduxSaga from 'next-redux-saga';\nimport reducer from '../reducers';\nimport rootSaga from '../sagas';\nimport { LOAD_USER_REQUEST } from '../reducers/user';\nimport axios from 'axios';\nimport Helmet from 'react-helmet';\nimport { Container } from 'next/app';\n\nvar NodeBird = function NodeBird(_ref) {\n  var Component = _ref.Component,\n      store = _ref.store,\n      pageProps = _ref.pageProps;\n  return (/*#__PURE__*/React.createElement(Container, null, /*#__PURE__*/React.createElement(Provider, {\n      store: store\n    }, /*#__PURE__*/React.createElement(Helmet, {\n      title: \"MAPLE AMUNA\",\n      htmlAttributes: {\n        lang: 'ko'\n      },\n      meta: [{\n        charSet: 'UTF-8'\n      }, {\n        name: 'viewport',\n        content: 'width=device-width,initial-scale=1.0,minimum-scale=1.0,maximum-scale=1.0,user-scalable=yes,viewport-fit=cover'\n      }, {\n        'http-equiv': 'X-UA-Compatible',\n        content: 'IE=edge'\n      }, {\n        name: 'description',\n        content: 'JINNE NODEBIRD'\n      }, {\n        name: 'og:description',\n        content: 'JINNE NODEBIRD'\n      }, {\n        name: 'og:title',\n        content: 'NODEBIRD'\n      }, {\n        property: 'og:type',\n        content: 'website'\n      }, {\n        property: 'og:image',\n        content: 'https://localhost:3060/favicon.ico'\n      }],\n      link: [{\n        rel: 'shortcut icon',\n        href: '/favicon.ico'\n      }, {\n        rel: 'StyleSheet',\n        href: 'https://cdnjs.cloudflare.com/ajax/libs/antd/3.26.9/antd.css'\n      }, {\n        rel: 'stylesheet',\n        href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick.min.css'\n      }, {\n        rel: 'stylesheet',\n        href: 'https://cdnjs.cloudflare.com/ajax/libs/slick-carousel/1.6.0/slick-theme.min.css'\n      }]\n    }), /*#__PURE__*/React.createElement(AppLayout, null, /*#__PURE__*/React.createElement(Component, pageProps))))\n  );\n};\n\nNodeBird.propTypes = {\n  Component: PropTypes.elementType.isRequired,\n  store: PropTypes.object.isRequired,\n  pageProps: PropTypes.object.isRequired\n}; // next에서 실행시켜주는 부분\n\nNodeBird.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    var ctx, Component, pageProps, state, cookie;\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            ctx = context.ctx, Component = context.Component;\n            pageProps = {};\n            state = ctx.store.getState();\n            cookie = ctx.isServer ? ctx.req.headers.cookie : '';\n            axios.defaults.headers.Cookie = '';\n\n            if (ctx.isServer && cookie) {\n              axios.defaults.headers.Cookie = cookie;\n            }\n\n            if (!state.user.me) {\n              ctx.store.dispatch({\n                // 쿠키로 정보 불러오게 원래 AppLayout 안에 들어있던거 갖고온 것 순서가 중요! 내 정보 먼저 가져오고 밑에 component.getInitialProps 사용\n                type: LOAD_USER_REQUEST\n              });\n            }\n\n            if (!Component.getInitialProps) {\n              _context.next = 14;\n              break;\n            }\n\n            _context.next = 10;\n            return Component.getInitialProps(ctx);\n\n          case 10:\n            _context.t0 = _context.sent;\n\n            if (_context.t0) {\n              _context.next = 13;\n              break;\n            }\n\n            _context.t0 = {};\n\n          case 13:\n            pageProps = _context.t0;\n\n          case 14:\n            return _context.abrupt(\"return\", {\n              pageProps: pageProps\n            });\n\n          case 15:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}(); // 고차 컴포넌트라고 부름 기존 component의 기능을 확장해준다. withRedux라는게 Nodebird component에 props로 store을 넣어주는 역할을 한다. 그 store을 어떻게 넣어줄지를 적어야 함\n// 그냥 외우는게 좋다 어차피 모든 프로젝트에 다 똑같이 쓰인다\n\n\nvar configureStore = function configureStore(initialState, options) {\n  var sagaMiddleware = createSagaMiddleware(); // 넣고싶은 미들웨어는 [] 여기 안에다가\n\n  var middlewares = [sagaMiddleware]; // 리덕스의 기능을 향상시키다 middleware을 apply해서!\n\n  var enhancer = process.env.NODE_ENV === 'production' ? compose(applyMiddleware.apply(void 0, middlewares)) : compose(applyMiddleware.apply(void 0, middlewares), // typeof window !== 'undefined' 은 !options.isServer랑 같다\n  // __REDUX_DEVTOOLS_EXTENSION__ 이거는 배포할때는 거의 뺀다 redux가 어떻게 돌아가는지 노출되어버림\n  !options.isServer && typeof window.__REDUX_DEVTOOLS_EXTENSION__ !== 'undefined' ? window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n    return f;\n  });\n  var store = createStore(reducer, initialState, enhancer);\n  store.sagaTask = sagaMiddleware.run(rootSaga); // 이 부분은 별로 바뀔 일이 없다 연결하는 부분!\n\n  return store;\n};\n\nexport default withRedux(configureStore)(withReduxSaga(NodeBird));","map":null,"metadata":{},"sourceType":"module"}