{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _parseInt from \"@babel/runtime-corejs2/core-js/parse-int\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { LOAD_POST_REQUEST } from '../reducers/post';\n\nvar Post = function Post(_ref) {\n  var id = _ref.id;\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch({\n      type: LOAD_POST_REQUEST,\n      data: postId\n    });\n  }, []);\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      singlePost = _useSelector.singlePost;\n\n  return (/*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(\"div\", null, singlePost.content), /*#__PURE__*/React.createElement(\"div\", null, singlePost.User.nickname), /*#__PURE__*/React.createElement(\"div\", null, singlePost.Images[0] && /*#__PURE__*/React.createElement(\"img\", {\n      src: \"http://localhost:7070/\".concat(post.Images[0].src)\n    })))\n  );\n};\n\nPost.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            context.store.dispatch({\n              type: LOAD_POST_REQUEST,\n              data: context.query.id\n            });\n            return _context.abrupt(\"return\", {\n              id: _parseInt(context.query.id, 10)\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nPost.propTypes = {\n  id: PropTypes.number.isRequired\n};\nexport default Post;","map":{"version":3,"sources":["C:/project/nodebird/front/pages/post.js"],"names":["React","useEffect","useSelector","useDispatch","PropTypes","LOAD_POST_REQUEST","Post","id","dispatch","type","data","postId","state","post","singlePost","content","User","nickname","Images","src","getInitialProps","context","store","query","propTypes","number","isRequired"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,iBAAT,QAAkC,kBAAlC;;AAEA,IAAMC,IAAI,GAAG,SAAPA,IAAO,OAAY;AAAA,MAATC,EAAS,QAATA,EAAS;AACrB,MAAMC,QAAQ,GAAGL,WAAW,EAA5B;AAEAF,EAAAA,SAAS,CAAC,YAAM;AACZO,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAEJ,iBADC;AAEPK,MAAAA,IAAI,EAAEC;AAFC,KAAD,CAAR;AAID,GALM,EAKJ,EALI,CAAT;;AAHqB,qBAUET,WAAW,CAAC,UAAAU,KAAK;AAAA,WAAIA,KAAK,CAACC,IAAV;AAAA,GAAN,CAVb;AAAA,MAUbC,UAVa,gBAUbA,UAVa;;AAWrB,uBACI,uDACI,iCAAMA,UAAU,CAACC,OAAjB,CADJ,eAEI,iCAAMD,UAAU,CAACE,IAAX,CAAgBC,QAAtB,CAFJ,eAGI,iCACKH,UAAU,CAACI,MAAX,CAAkB,CAAlB,kBAAwB;AAAK,MAAA,GAAG,kCAA2BL,IAAI,CAACK,MAAL,CAAY,CAAZ,EAAeC,GAA1C;AAAR,MAD7B,CAHJ;AADJ;AASH,CApBD;;AAsBAb,IAAI,CAACc,eAAL;AAAA,uEAAuB,iBAAOC,OAAP;AAAA;AAAA;AAAA;AAAA;AACnBA,YAAAA,OAAO,CAACC,KAAR,CAAcd,QAAd,CAAuB;AACrBC,cAAAA,IAAI,EAAEJ,iBADe;AAErBK,cAAAA,IAAI,EAAEW,OAAO,CAACE,KAAR,CAAchB;AAFC,aAAvB;AADmB,6CAKZ;AAAEA,cAAAA,EAAE,EAAE,UAASc,OAAO,CAACE,KAAR,CAAchB,EAAvB,EAA2B,EAA3B;AAAN,aALY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAvB;;AAAA;AAAA;AAAA;AAAA;;AAQAD,IAAI,CAACkB,SAAL,GAAiB;AACbjB,EAAAA,EAAE,EAAEH,SAAS,CAACqB,MAAV,CAAiBC;AADR,CAAjB;AAIA,eAAepB,IAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { LOAD_POST_REQUEST } from '../reducers/post';\r\n\r\nconst Post = ({ id }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    useEffect(() => {\r\n        dispatch({\r\n          type: LOAD_POST_REQUEST,\r\n          data: postId,\r\n        });\r\n      }, []);\r\n\r\n    const { singlePost } = useSelector(state => state.post);\r\n    return (\r\n        <>\r\n            <div>{singlePost.content}</div>\r\n            <div>{singlePost.User.nickname}</div>\r\n            <div>\r\n                {singlePost.Images[0] && <img src={`http://localhost:7070/${post.Images[0].src}`}/>}\r\n            </div>\r\n        </>\r\n    )\r\n};\r\n\r\nPost.getInitialProps = async (context) => {\r\n    context.store.dispatch({\r\n      type: LOAD_POST_REQUEST,\r\n      data: context.query.id,\r\n    });\r\n    return { id: parseInt(context.query.id, 10) };\r\n  };\r\n\r\nPost.propTypes = {\r\n    id: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Post;"]},"metadata":{},"sourceType":"module"}