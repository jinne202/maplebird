{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nimport _asyncToGenerator from \"@babel/runtime-corejs2/helpers/esm/asyncToGenerator\";\n// import React, { useEffect, useCallback } from 'react';\n// import PropTypes from 'prop-types';\n// import { useDispatch, useSelector } from 'react-redux';\n// import { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\n// import PostCard from '../containers/PostCard';\n// const HashTag = ({ tag }) => {\n//     const dispatch = useDispatch();\n//     const { mainPosts, hasMorePost } = useSelector(state => state.post);\n//     const onScroll = useCallback(() => {\n//         if (window.scrollY + document.documentElement.clientHeight > document.documentElement.scrollHeight - 300) {\n//           if (hasMorePost) {\n//             dispatch({\n//               type : LOAD_HASHTAG_POSTS_REQUEST,\n//               lastId : mainPosts[mainPosts.length - 1] && mainPosts[mainPosts.length - 1].id,\n//               data : tag,\n//             });\n//           }\n//         }\n//       }, [hasMorePost, mainPosts.length, tag]);\n//       useEffect(() => {\n//         window.addEventListener('scroll', onScroll);\n//         return () => {\n//           window.removeEventListener('scroll', onScroll);\n//         }\n//       }, [mainPosts.length, hasMorePost, tag]);\n//     return(\n//         <div>\n//             {mainPosts.map(c => (\n//                 <PostCard key={c.id} post={c} />\n//             ))}\n//         </div>\n//     )\n// }\n// HashTag.propTypes = {\n//     tag : PropTypes.string.isRequired,\n// };\n// // getInitialProps = 이건 method가 하나 생긴다! 얘는 context라는 매개변수를 받는다 이거 사용하려면 _app.js에서 nodebird getinitialProps를 사용해야한다\n// HashTag.getInitialProps = async (context) => {\n//     const {tag} = context.query;\n//     console.log('hashtag getInitialProps', tag);\n//     context.store.dispatch({\n//         type : LOAD_HASHTAG_POSTS_REQUEST,\n//         data : tag,\n//     });\n//     return { tag };\n// };\n// export default HashTag;\nimport React, { useEffect, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { LOAD_HASHTAG_POSTS_REQUEST } from '../reducers/post';\nimport PostCard from '../containers/PostCard';\n\nvar Hashtag = function Hashtag(_ref) {\n  var tag = _ref.tag;\n  console.log(tag);\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(function (state) {\n    return state.post;\n  }),\n      mainPosts = _useSelector.mainPosts;\n\n  useEffect(function () {\n    dispatch({\n      type: LOAD_HASHTAG_POSTS_REQUEST,\n      data: tag\n    });\n  }, []);\n  return (/*#__PURE__*/React.createElement(\"div\", null, mainPosts.map(function (c) {\n      return (/*#__PURE__*/React.createElement(PostCard, {\n          key: +c.createdAt,\n          post: c\n        })\n      );\n    }))\n  );\n};\n\nHashtag.propTypes = {\n  tag: PropTypes.string.isRequired\n};\n\nHashtag.getInitialProps = /*#__PURE__*/function () {\n  var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(context) {\n    return _regeneratorRuntime.wrap(function _callee$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            console.log('hashtag getInitialProps', context.query.tag);\n            return _context.abrupt(\"return\", {\n              tag: context.query.tag\n            });\n\n          case 2:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, _callee);\n  }));\n\n  return function (_x) {\n    return _ref2.apply(this, arguments);\n  };\n}();\n\nexport default Hashtag;","map":null,"metadata":{},"sourceType":"module"}